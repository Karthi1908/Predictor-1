{"version":3,"sources":["helper/tezos.js","helper/WalletContext.js","components/assets/Homepage-bg-purple.png","components/assets/lazyphone.png","helper/Loading.js","components/Header.js","components/Footer/Footer.js","helper/PredictionContext.js","components/Predict/index.js","components/assets/phone.png","components/assets/phone-purple.png","components/assets/Herobg.png","components/assets/tezo.png","helper/PageLoading.js","components/Home/index.js","helper/PageLoading2.js","components/assets/Predictions-Background.png","components/Mypreds/index.js","components/assets/Redeem-Background.png","components/Redeem/redeem.js","components/assets/Portfolio-Background.png","components/assets/Portfolio-bg.png","components/Portfolio/Portfolio.js","components/assets/Whitelistme-Background.png","components/Whitelist/Whitelist.js","components/assets/Privacy-Background.png","page/Privacy/Privacy.js","components/assets/Contact-Background.png","components/assets/Twitter.svg","components/assets/Telegram.svg","page/Contact/Contact.js","components/assets/FAQ-Background.png","page/FAQ/FAQ.js","components/assets/Blog.png","components/assets/BlogImage.png","page/Blogs/Blogs.js","page/Blogs/BlogContent.js","components/assets/TermsUse.png","page/Terms/Terms.js","components/assets/How.png","page/How/How.js","App.js","reportWebVitals.js","index.js"],"names":["CONTRACT_ADDRESS","TOKEN_ADDRESS","Tezos","TezosToolkit","setPackerProvider","MichelCodecPacker","ContractProvider","contract","beaconWallet","BeaconWallet","name","preferredNetwork","setWalletProvider","wallet","useWallet","React","useState","activeAccount","setActiveAccount","connected","setConnected","useEffect","client","getActiveAccount","then","acc","connect","a","requestPermissions","network","type","rpcUrl","req","accountInfo","window","location","reload","disconnect","clearActiveAccount","Loading","display","minHeight","height","justifyContent","alignItems","flexDirection","bgGradient","paddingBottom","width","paddingStart","base","md","lg","paddingEnd","paddingTop","bgImage","heroPurple","bgPosition","bgSize","w","borderRadius","size","mt","noOfLines","spacing","marginTop","marginLeft","boxSize","objectFit","src","phoneLazy","zIndex","px","padding","boxShadow","Redeem","useDisclosure","isOpen","onOpen","onClose","submit","e","preventDefault","target","elements","tokenId","amount","console","log","value","at","methods","redeemTokens","parseInt","send","op","confirmation","alert","onClick","onSubmit","required","placeholder","Header","links","history","useNavigate","useColorMode","colorMode","toggleColorMode","whiteListProposer","addProposers","address","op1","color","useColorModeValue","bg","h","icon","fontSize","colorScheme","fontWeight","marginRight","as","Button","cursor","minW","maxW","overflow","whiteSpace","textOverflow","pb","Portfolio","colors","text","data","setData","ledger","tokenContract","storage","tokenStore","tokenLedger","tokens","all_tokens","toString","split","map","Number","get","push","id","balance","catch","error","length","flexWrap","pred","i","maxWidth","border","margin","tokenID","Redeem1","returnFocusOnClose","placement","closeOnBlur","textColor","htmlFor","Footer","py","href","className","_focus","outline","borderBottom","borderColor","PredictionContext","createContext","predictions","predictionsArray","updatePredictions","BuySellWindow","options","option","quantity","request","setRequest","buySubmit","voteOnprediction","parseFloat","variant","gap","onChange","direction","borderWidth","isRequired","bgColor","Predict","useParams","useContext","_","predictionVoteSnapshot","snapshot","snapshotList","keys","Math","round","volume","prediction","predictionName","lastDate","Date","endTime","toLocaleDateString","toLocaleTimeString","key","ref","predictionRef","result","predictionVoteResult","pstatus","predictionStatus","predictionOptions","snap","Volume","disclosure","flexDir","allowToggle","flex","p","PageLoading","Home","page","setPage","loading","setLoading","setTimeout","inProgressArray","filter","completedArray","totalPage","ceil","maxHeight","tezo","textAlign","phonePurple","backgroundColor","marginBottom","slice","PageLoading2","AddPredRes","predictResults","UpdatePredStatus","status","updateStatus","AddNewPrediction","num","setNum","setOptions","resultRef","start","end","endValue","toISOString","startValue","addprediction","Object","position","top","left","Array","opt","MyPreds","myPreds","setMyPreds","admin","x","item","proposer","portfolioBG","redeemBg","_placeholder","PortfolioComponent","Whitelist","Background","Privacy","privacyBG","Contact","contactBG","twitter","telegram","FAQ","defaultIndex","allowMultiple","How","lineHeight","ImageBlog","BlogContent","Terms","App","setPredictions","setPredictionsArray","preds","predArray","counter","Id","predList","initialColorMode","useSystemColorMode","Provider","exact","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d3613ae.chunk.js","sourcesContent":["import { NetworkType } from '@airgap/beacon-sdk';\r\nimport { BeaconWallet } from '@taquito/beacon-wallet';\r\nimport { TezosToolkit, MichelCodecPacker, compose } from '@taquito/taquito';\r\n//import { Tzip12Module, tzip12 } from \"@taquito/tzip12\";\r\n//import { Tzip16Module, tzip16, bytes2Char } from \"@taquito/tzip16\";\r\n\r\n//const CONTRACT_ADDRESS = 'KT1BavDyS4Qkv2xeRTzy5mf37oJcmHTSgtHR';\r\n//const TOKEN_ADDRESS = 'KT19Spcv2j1ktJd5EBTkg4XbnaEeRD1tWmhW';\r\n//const CONTRACT_ADDRESS = 'KT1DwGe6b1x3iqCGMgrFykasxEErt986Rgox';\r\n//const TOKEN_ADDRESS = 'KT1BvYkPGPau7xDSRxLVz7DQpuWZfrXBLL27';\r\n\r\nconst CONTRACT_ADDRESS = 'KT1QM2Drh18w6fnU13fwxBCDAToWjKfcgZm5'; //-- Mainnet \r\nconst TOKEN_ADDRESS = 'KT1U8jQyUkwsYVpgogrjSAKyQXi8kWengpzp';\r\n\r\n//const Tezos = new TezosToolkit('https://hangzhounet.smartpy.io');\r\n//const Tezos = new TezosToolkit('https://ithacanet.smartpy.io');\r\n//const Tezos = new TezosToolkit('https://mainnet.smartpy.io');\r\nconst Tezos = new TezosToolkit('https://mainnet.api.tez.ie');\r\nTezos.setPackerProvider(new MichelCodecPacker());\r\n\r\nconst ContractProvider = Tezos.contract;\r\n\r\nconst beaconWallet = new BeaconWallet({\r\n  name: 'Predictor',\r\n  preferredNetwork: \"mainnet\"\r\n});\r\n\r\nTezos.setWalletProvider(beaconWallet);\r\n\r\nconst wallet = Tezos.wallet;\r\n\r\nexport { CONTRACT_ADDRESS,TOKEN_ADDRESS, Tezos, ContractProvider, wallet, beaconWallet };\r\n","import { NetworkType, Network, DAppClient } from '@airgap/beacon-sdk';\r\nimport React from 'react';\r\nimport { beaconWallet } from './tezos';\r\n\r\nconst useWallet = () => {\r\n  const [activeAccount, setActiveAccount] = React.useState(null);\r\n  const [connected, setConnected] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    beaconWallet.client.getActiveAccount().then((acc) => {\r\n      if (acc) {\r\n        setActiveAccount(acc);\r\n        setConnected(true);\r\n      }\r\n    });\r\n  }, [activeAccount]);\r\n\r\n  const connect = async () => {\r\n    const currAcc = await beaconWallet.client.getActiveAccount();\r\n    if (!currAcc) {\r\n      const req = await beaconWallet.client.requestPermissions({\r\n        network: {\r\n          type: 'mainnet',\r\n          rpcUrl: 'https://mainnet.api.tez.ie',\r\n        },\r\n      });\r\n      if (req) {\r\n        setActiveAccount(req.accountInfo);\r\n        setConnected(true);\r\n        window.location.reload();\r\n      }\r\n    }\r\n  };\r\n\r\n  const disconnect = () => {\r\n    beaconWallet.client.clearActiveAccount();\r\n    setConnected(false);\r\n    window.location.reload();\r\n  };\r\n\r\n  return { connect, disconnect, activeAccount, connected };\r\n};\r\n\r\nexport { useWallet };\r\n","export default __webpack_public_path__ + \"static/media/Homepage-bg-purple.f246cb89.png\";","export default __webpack_public_path__ + \"static/media/lazyphone.c30ea932.png\";","import { Spinner } from '@chakra-ui/react';\r\nimport React from 'react';\r\nimport {\r\n  Stack,\r\n  Skeleton,\r\n  SkeletonCircle,\r\n  SkeletonText,\r\n  Text,\r\n  Flex,\r\n  Box,\r\n  Heading,\r\n  Link,\r\n  Image,\r\n} from '@chakra-ui/react';\r\nimport heroPurple from '../components/assets/Homepage-bg-purple.png';\r\nimport phoneLazy from '../components/assets/lazyphone.png';\r\n\r\nimport { AiFillCheckCircle } from 'react-icons/ai';\r\n\r\nimport { FaLongArrowAltRight } from 'react-icons/fa';\r\nimport { HiOutlineArrowSmLeft, HiOutlineArrowSmRight } from 'react-icons/hi';\r\n\r\nexport default function Loading() {\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      minHeight=\"100vh\"\r\n      height=\"100%\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      flexDirection=\"column\"\r\n      bgGradient=\"linear(to-r, #25203a, #181125)\"\r\n      paddingBottom=\"20\"\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        width=\"100%\"\r\n        paddingStart={{ base: '5vh', md: '25vh', lg: '25vh' }}\r\n        paddingEnd={{ base: '5vh', md: '25vh', lg: '25vh' }}\r\n        paddingTop=\"10vh\"\r\n        bgImage={heroPurple}\r\n        bgPosition=\"center\"\r\n        bgSize=\"cover\"\r\n        flexDirection={{ base: 'column', md: 'row', lg: 'row' }}\r\n      >\r\n        <Box\r\n          w={{ base: 'auto', md: '55%', lg: '55%' }}\r\n          display=\"flex\"\r\n          flexDirection={{ base: 'column', md: 'column', lg: 'column' }}\r\n        >\r\n          <Skeleton\r\n            borderRadius=\"20\"\r\n            bgGradient=\"linear(to-r, #2d2d40, #eaeaeb)\"\r\n          >\r\n            <SkeletonCircle size=\"4\" />\r\n            <SkeletonText mt=\"4\" noOfLines={3} spacing=\"3\" />\r\n          </Skeleton>\r\n\r\n          <Stack w=\"60%\" marginTop=\"10\">\r\n            <Skeleton height=\"20px\" borderRadius=\"10\" />\r\n            <Skeleton height=\"20px\" borderRadius=\"10\" />\r\n            <Skeleton height=\"20px\" borderRadius=\"10\" />\r\n          </Stack>\r\n\r\n          <Flex\r\n            justifyContent=\"space-between\"\r\n            w=\"50%\"\r\n            marginLeft=\"30px\"\r\n            marginTop=\"40px\"\r\n          >\r\n            <Skeleton w=\"30%\" height=\"20px\" borderRadius=\"10\" />\r\n            <Skeleton w=\"30%\" height=\"20px\" borderRadius=\"10\" />\r\n            <Skeleton w=\"30%\" height=\"20px\" borderRadius=\"10\" />\r\n          </Flex>\r\n\r\n          <Flex\r\n            justifyContent=\"space-start\"\r\n            w=\"55%\"\r\n            marginTop=\"20px\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Skeleton w=\"40%\" height=\"40px\" borderRadius=\"10\" />\r\n            <Skeleton w=\"20%\" height=\"20px\" marginLeft=\"5\" borderRadius=\"10\" />\r\n          </Flex>\r\n\r\n          <Flex justifyContent=\"space-between\" w=\"55%\" marginTop=\"30px\">\r\n            <Skeleton w=\"30%\" height=\"40px\" borderRadius=\"10\" />\r\n            <Skeleton w=\"30%\" height=\"40px\" borderRadius=\"10\" />\r\n            <Skeleton w=\"30%\" height=\"40px\" borderRadius=\"10\" />\r\n          </Flex>\r\n\r\n          <Flex justifyContent=\"space-between\" w=\"50%\" marginTop=\"20px\">\r\n            <Skeleton w=\"30%\" height=\"20px\" borderRadius=\"10\" />\r\n            <Skeleton w=\"30%\" height=\"20px\" borderRadius=\"10\" />\r\n            <Skeleton w=\"30%\" height=\"20px\" borderRadius=\"10\" />\r\n          </Flex>\r\n        </Box>\r\n        <Box\r\n          w={{ base: '100%', md: '45%', lg: '45%' }}\r\n          display=\"flex\"\r\n          justifyContent=\"center\"\r\n        >\r\n          <Image\r\n            boxSize={{ base: '400px', md: '700px', lg: '700px' }}\r\n            objectFit=\"cover\"\r\n            marginTop={{ base: '0px', md: '-100px', lg: '-100px' }}\r\n            src={phoneLazy}\r\n            zIndex=\"10\"\r\n          />\r\n        </Box>\r\n      </Box>\r\n      <Flex\r\n        w=\"100%\"\r\n        px={{ base: '5', md: '20', lg: '20' }}\r\n        marginTop=\"50\"\r\n        justifyContent=\"space-between\"\r\n      >\r\n        <Box\r\n          padding=\"6\"\r\n          w=\"30%\"\r\n          boxShadow=\"lg\"\r\n          bgGradient=\"linear(to-r, #2d2d40, #eaeaeb)\"\r\n          borderRadius=\"10px\"\r\n        >\r\n          <SkeletonCircle size=\"10\" />\r\n          <SkeletonText mt=\"4\" noOfLines={4} spacing=\"4\" />\r\n        </Box>\r\n        <Box\r\n          padding=\"6\"\r\n          w=\"30%\"\r\n          boxShadow=\"lg\"\r\n          bgGradient=\"linear(to-r, #2d2d40, #eaeaeb)\"\r\n          borderRadius=\"10px\"\r\n        >\r\n          <SkeletonCircle size=\"10\" />\r\n          <SkeletonText mt=\"4\" noOfLines={4} spacing=\"4\" />\r\n        </Box>\r\n        <Box\r\n          padding=\"6\"\r\n          w=\"30%\"\r\n          boxShadow=\"lg\"\r\n          bgGradient=\"linear(to-r, #2d2d40, #eaeaeb)\"\r\n          borderRadius=\"10px\"\r\n        >\r\n          <SkeletonCircle size=\"10\" />\r\n          <SkeletonText mt=\"4\" noOfLines={4} spacing=\"4\" />\r\n        </Box>\r\n      </Flex>\r\n\r\n      <Flex\r\n        w=\"100%\"\r\n        px={{ base: '5', md: '20', lg: '20' }}\r\n        justifyContent=\"space-between\"\r\n        marginTop=\"20\"\r\n      >\r\n        <Box\r\n          padding=\"6\"\r\n          w=\"100%\"\r\n          boxShadow=\"lg\"\r\n          bgGradient=\"linear(to-r, #2d2d40, #eaeaeb)\"\r\n          borderRadius=\"10px\"\r\n        >\r\n          <SkeletonCircle size=\"10\" />\r\n          <SkeletonText mt=\"4\" noOfLines={4} spacing=\"4\" />\r\n        </Box>\r\n      </Flex>\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport {\r\n  Box,\r\n  Flex,\r\n  HStack,\r\n  Container,\r\n  IconButton,\r\n  Button,\r\n  Menu,\r\n  MenuButton,\r\n  MenuList,\r\n  MenuItem,\r\n  useDisclosure,\r\n  useColorModeValue,\r\n  Stack,\r\n  useColorMode,\r\n  Text,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalBody,\r\n  FormControl,\r\n  FormLabel,\r\n  Popover,\r\n  PopoverBody,\r\n  PopoverContent,\r\n  PopoverHeader,\r\n  PopoverTrigger,\r\n  Input,\r\n} from '@chakra-ui/react';\r\nimport { HamburgerIcon, CloseIcon, SunIcon, MoonIcon } from '@chakra-ui/icons';\r\nimport { useWallet } from '../helper/WalletContext';\r\nimport {\r\n  CONTRACT_ADDRESS,\r\n  TOKEN_ADDRESS,\r\n  wallet,\r\n  Tezos,\r\n} from '../helper/tezos';\r\nimport { TezosToolkit, MichelCodecPacker, compose } from '@taquito/taquito';\r\nimport Loading from '../helper/Loading';\r\n\r\nconst Redeem = () => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const submit = async (e) => {\r\n    e.preventDefault();\r\n    const { tokenId, amount } = e.target.elements;\r\n    console.log(tokenId.value, amount.value);\r\n    const contract = await wallet.at(CONTRACT_ADDRESS);\r\n\r\n    const op = await contract.methods\r\n      .redeemTokens(parseInt(amount.value), parseInt(tokenId.value))\r\n      .send();\r\n    await op.confirmation(1);\r\n    alert('Redemption Completed!');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MenuItem onClick={onOpen}>Redeem</MenuItem>\r\n      <Modal isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>Redeem Token</ModalHeader>\r\n          <ModalBody>\r\n            <form onSubmit={submit}>\r\n              <FormControl>\r\n                <Input\r\n                  required\r\n                  type=\"number\"\r\n                  name=\"tokenId\"\r\n                  placeholder=\"Token ID\"\r\n                ></Input>\r\n              </FormControl>\r\n              <FormControl>\r\n                <Input\r\n                  required\r\n                  type=\"number\"\r\n                  name=\"amount\"\r\n                  placeholder=\"Amount\"\r\n                />\r\n              </FormControl>\r\n              <Button type=\"submit\">Redeem</Button>\r\n            </form>\r\n          </ModalBody>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default function Header({ links = [] }) {\r\n  const history = useNavigate();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const { connect, disconnect, activeAccount, connected } = useWallet();\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n  const whiteListProposer = async () => {\r\n    const contract = await wallet.at(CONTRACT_ADDRESS);\r\n    const op1 = await contract.methods\r\n      .addProposers(activeAccount.address)\r\n      .send();\r\n\r\n    await op1.confirmation(1);\r\n    alert('Proposer Whitelisted!');\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      color={useColorModeValue('purple', 'white')}\r\n      bg={useColorModeValue('purple.100', 'purple.900')}\r\n      px={4}\r\n    >\r\n      <Flex h={16} alignItems={'center'} justifyContent={'space-between'}>\r\n        <IconButton\r\n          size={'md'}\r\n          icon={isOpen ? <CloseIcon /> : <HamburgerIcon />}\r\n          aria-label={'Open Menu'}\r\n          display={{ md: 'none' }}\r\n          onClick={isOpen ? onClose : onOpen}\r\n        />\r\n\r\n        <HStack spacing={8} alignItems={'center'}>\r\n          <Box></Box>\r\n        </HStack>\r\n        <Text fontSize=\"3xl\" colorScheme=\"blue\" fontWeight=\"bold\">\r\n          Predictor\r\n        </Text>\r\n\r\n        <Flex alignItems={'center'}>\r\n          <IconButton\r\n            marginRight=\"10px\"\r\n            icon={colorMode === 'dark' ? <SunIcon /> : <MoonIcon />}\r\n            onClick={toggleColorMode}\r\n          />\r\n          <Box display={{ base: 'none', md: 'flex' }}>\r\n            {!connected ? (\r\n              <Button onClick={connect}>Connect Wallet</Button>\r\n            ) : (\r\n              <Menu>\r\n                <MenuButton as={Button} cursor={'pointer'} minW={0}>\r\n                  <Text\r\n                    maxW=\"300px\"\r\n                    overflow=\"hidden\"\r\n                    whiteSpace=\"nowrap\"\r\n                    textOverflow=\"ellipsis\"\r\n                  >\r\n                    {activeAccount?.address}\r\n                  </Text>\r\n                </MenuButton>\r\n                <MenuList>\r\n                  <MenuItem onClick={() => history('/mypreds')}>\r\n                    My Predictions\r\n                  </MenuItem>\r\n                  <MenuItem onClick={whiteListProposer}>Whitelist Me</MenuItem>\r\n                  <MenuItem onClick={disconnect}>Disconnect</MenuItem>\r\n                  <Portfolio />\r\n                  <Redeem />\r\n                </MenuList>\r\n              </Menu>\r\n            )}\r\n          </Box>\r\n        </Flex>\r\n      </Flex>\r\n\r\n      {isOpen ? (\r\n        <Box pb={4} display={{ md: 'none' }}>\r\n          <Stack as={'nav'} spacing={4}>\r\n            {!connected ? (\r\n              <Button onClick={connect}>Connect Wallet</Button>\r\n            ) : (\r\n              <Menu>\r\n                <MenuButton as={Button} cursor={'pointer'} minW={0}>\r\n                  <Text\r\n                    maxW=\"300px\"\r\n                    overflow=\"hidden\"\r\n                    whiteSpace=\"nowrap\"\r\n                    textOverflow=\"ellipsis\"\r\n                  >\r\n                    {activeAccount?.address}\r\n                  </Text>\r\n                </MenuButton>\r\n                <MenuList>\r\n                  <MenuItem onClick={() => history('/mypreds')}>\r\n                    My Predictions\r\n                  </MenuItem>\r\n                  <MenuItem onClick={disconnect}>Disconnect</MenuItem>\r\n                </MenuList>\r\n              </Menu>\r\n            )}\r\n          </Stack>\r\n        </Box>\r\n      ) : null}\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst Portfolio = () => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const colors = {\r\n    bg: useColorModeValue('purple.100', 'purple.700'),\r\n    text: useColorModeValue('blue', 'white'),\r\n  };\r\n  const { connect, disconnect, activeAccount, connected } = useWallet();\r\n  const [data, setData] = React.useState(null);\r\n  let ledger = [];\r\n  React.useEffect(async () => {\r\n    if (!connected) {\r\n      await connect();\r\n    }\r\n    if (activeAccount) {\r\n      console.log(activeAccount);\r\n      console.log(activeAccount.address);\r\n      const tokenContract = await Tezos.contract.at(TOKEN_ADDRESS);\r\n      const tokenStore = await tokenContract.storage();\r\n      const tokenLedger = tokenStore.ledger;\r\n      console.log(tokenLedger);\r\n      let tokens = tokenStore.all_tokens.toString().split(',').map(Number);\r\n      console.log(tokens);\r\n\r\n      for (let tokenId = tokens.length - 1; tokenId >= 0; tokenId--) {\r\n        console.log(tokenId, tokens[tokenId]);\r\n        await tokenLedger\r\n          .get([activeAccount.address, tokens[tokenId]])\r\n          .then((value) => {\r\n            if (value > 0) {\r\n              ledger.push({ id: tokens[tokenId], balance: value.toString() });\r\n            }\r\n          })\r\n          .catch((error) =>\r\n            console.log(`Error: ${tokens[tokenId]} ${activeAccount.address}`)\r\n          );\r\n        console.log(ledger);\r\n      }\r\n\r\n      setData(ledger);\r\n    }\r\n  }, [activeAccount]);\r\n  return data ? (\r\n    <>\r\n      <MenuItem onClick={onOpen}>Portfolio</MenuItem>\r\n      <Modal isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>Portfolio Details</ModalHeader>\r\n          <ModalBody>\r\n            <Text color={colors.text}>\r\n              {' '}\r\n              <b> Portfolio </b>{' '}\r\n            </Text>\r\n\r\n            <Box display=\"flex\" flexDirection=\"column\" flexWrap=\"wrap\">\r\n              {data.map((pred, i) => {\r\n                return (\r\n                  <Box\r\n                    key={i}\r\n                    //onClick={}\r\n                    display=\"flex\"\r\n                    maxWidth=\"400px\"\r\n                    flexDirection=\"row\"\r\n                    border=\"0px solid\"\r\n                    borderRadius=\"15px\"\r\n                    padding=\"5px\"\r\n                    margin=\"5px\"\r\n                  >\r\n                    <Text color={colors.text}>\r\n                      Token id &nbsp;: &nbsp; {pred.id} &nbsp; |&nbsp;\r\n                    </Text>\r\n                    <Text color={colors.text}>\r\n                      Balance &nbsp; : &nbsp; {pred.balance}&emsp;\r\n                    </Text>\r\n                    <Redeem1 tokenID={pred.id} />\r\n                  </Box>\r\n                );\r\n              })}\r\n            </Box>\r\n          </ModalBody>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  ) : (\r\n    <Loading />\r\n  );\r\n};\r\n\r\nconst Redeem1 = (tokenID) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  console.log('tokenId', tokenID.tokenID.toString());\r\n  const colors = {\r\n    bg: useColorModeValue('purple.300', 'purple.600'),\r\n    text: useColorModeValue('purple', 'white'),\r\n  };\r\n  const submit = async (e) => {\r\n    e.preventDefault();\r\n    const { amount } = e.target.elements;\r\n    console.log(tokenID.tokenID, amount.value);\r\n    const contract = await wallet.at(CONTRACT_ADDRESS);\r\n\r\n    await contract.methods.redeemTokens(amount.value, tokenID.tokenID).send();\r\n  };\r\n\r\n  return (\r\n    <Popover returnFocusOnClose={false} placement=\"right\" closeOnBlur={false}>\r\n      <PopoverTrigger>\r\n        <Button bg={colors.bg} textColor={colors.text}>\r\n          Redeem\r\n        </Button>\r\n      </PopoverTrigger>\r\n      <PopoverContent textColor={colors.text}>\r\n        <PopoverHeader fontWeight=\"semibold\">Redeem Token</PopoverHeader>\r\n        <PopoverBody>\r\n          <form onSubmit={submit}>\r\n            <FormControl>\r\n              <FormLabel htmlFor=\"tokenID\">\r\n                Token Id : {tokenID.tokenID.toString()}{' '}\r\n              </FormLabel>\r\n            </FormControl>\r\n            <FormControl>\r\n              <Input\r\n                required\r\n                type=\"number\"\r\n                name=\"amount\"\r\n                placeholder=\"Amount\"\r\n              />\r\n            </FormControl>\r\n            <Button type=\"submit\">Redeem</Button>\r\n          </form>\r\n        </PopoverBody>\r\n      </PopoverContent>\r\n    </Popover>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Footer.css';\r\nimport { FcNext } from 'react-icons/fc';\r\nimport { AiOutlineArrowRight, AiOutlineRight } from 'react-icons/ai';\r\n\r\nimport { HiOutlineChevronRight } from 'react-icons/hi';\r\n\r\nimport {\r\n  Box,\r\n  Flex,\r\n  Center,\r\n  HStack,\r\n  Container,\r\n  IconButton,\r\n  Button,\r\n  Menu,\r\n  MenuButton,\r\n  MenuList,\r\n  MenuItem,\r\n  useDisclosure,\r\n  useColorModeValue,\r\n  Stack,\r\n  useColorMode,\r\n  Text,\r\n  Link,\r\n  Heading,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalBody,\r\n  FormControl,\r\n  Form,\r\n  Formik,\r\n  FormLabel,\r\n  Popover,\r\n  PopoverBody,\r\n  PopoverContent,\r\n  PopoverHeader,\r\n  PopoverTrigger,\r\n  Input,\r\n  InputGroup,\r\n  InputLeftElement,\r\n  InputRightElement,\r\n} from '@chakra-ui/react';\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <>\r\n      <Flex\r\n        flexDirection={{ base: 'column', md: 'column', lg: 'column' }}\r\n        color={useColorModeValue('white')}\r\n        bg={'#1A1A1A'}\r\n        px={{ base: '5', md: '20', lg: '20' }}\r\n        paddingBottom=\"7\"\r\n      >\r\n        <Flex\r\n          py={5}\r\n          justifyContent={'center'}\r\n          flexDirection={{ base: 'row', md: 'row', lg: 'row' }}\r\n        >\r\n          <Link\r\n            px={{ base: '0', md: '5', lg: '5' }}\r\n            fontSize={{ md: 'sm', lg: 'sm' }}\r\n            href=\"/Contact\"\r\n            className=\"links\"\r\n            _focus={{ outline: 'none' }}\r\n          >\r\n            Contact Us\r\n          </Link>\r\n          {/* <Link\r\n            px={{ base: '0', md: '5', lg: '5' }}\r\n            fontSize={{ md: 'sm', lg: 'sm' }}\r\n            href=\"/Privacy\"\r\n            className=\"links\"\r\n          >\r\n            Privacy Policy\r\n          </Link> */}\r\n          <Link\r\n            px={{ base: '0', md: '5', lg: '5' }}\r\n            fontSize={{ md: 'sm', lg: 'sm' }}\r\n            href=\"/Terms\"\r\n            className=\"links\"\r\n            _focus={{ outline: 'none' }}\r\n          >\r\n            Terms of Use\r\n          </Link>\r\n          <Link\r\n            px={{ base: '0', md: '5', lg: '5' }}\r\n            fontSize={{ md: 'sm', lg: 'sm' }}\r\n            href=\"/How\"\r\n            className=\"links\"\r\n            _focus={{ outline: 'none' }}\r\n          >\r\n            How it Works\r\n          </Link>\r\n          <Link\r\n            px={{ base: '0', md: '5', lg: '5' }}\r\n            fontSize={{ md: 'sm', lg: 'sm' }}\r\n            href=\"/FAQ\"\r\n            className=\"links\"\r\n            _focus={{ outline: 'none' }}\r\n          >\r\n            FAQs\r\n          </Link>\r\n          <Link\r\n            px={{ base: '0', md: '5', lg: '5' }}\r\n            fontSize={{ md: 'sm', lg: 'sm' }}\r\n            href=\"/Blogs\"\r\n            className=\"links\"\r\n            _focus={{ outline: 'none' }}\r\n          >\r\n            Blogs\r\n          </Link>\r\n        </Flex>\r\n\r\n        <Flex\r\n          paddingStart={{ base: '0', md: '20', lg: '20' }}\r\n          paddingEnd={{ base: '0', md: '20', lg: '20' }}\r\n          paddingBottom=\"10\"\r\n          paddingTop=\"18\"\r\n          borderBottom=\"1px solid\"\r\n          borderColor=\"gray\"\r\n          flexDirection={{ base: 'column', md: 'row', lg: 'row' }}\r\n        >\r\n          <Box\r\n            w={{ base: '100%', md: '100%', lg: '100%' }}\r\n            paddingEnd={{ base: '0', md: '20', lg: '20' }}\r\n          >\r\n            <Flex flexDirection=\"column\">\r\n              <Heading as=\"h3\" size=\"lg\" paddingBottom=\"3\">\r\n                Disclaimers\r\n              </Heading>\r\n              <Text className=\"footer\" fontSize={{ md: 'sm', lg: 'sm' }}>\r\n                The Predictor website (“Site”) is for informational and\r\n                educational purposes only. The Site displays existing markets\r\n                deployed on the Tezos blockchain and is a graphical user\r\n                interface for both visualizing data from on-chain activity and\r\n                interacting with smart contracts directly from your own Tezos\r\n                wallet. Predictor takes no custody of users' crypto assets and\r\n                does not host any markets. None of the material on the Site is\r\n                intended to be, nor does it constitute, a solicitation,\r\n                recommendation or offer to buy or sell any security, commodity\r\n                interest, derivative, financial product or instrument. Users are\r\n                responsible for complying with all applicable laws and should\r\n                conduct their own analysis and consult with professional\r\n                advisors prior to entering into any smart contracts.\r\n              </Text>\r\n            </Flex>\r\n          </Box>\r\n\r\n          {/* <Box w={{ base: '100%', md: '50%', lg: '50%' }} marginTop={{ base: '20px', md: '0px', lg: '0px' }}>\r\n            <Box w=\"100%\">\r\n              <Heading as=\"h4\" size=\"sm\">\r\n                Subcribe to our newsletter\r\n              </Heading>\r\n              <Box paddingTop=\"7\" w=\"100%\">\r\n                <form position=\"relative\" display=\"flex\" flex-direction=\"row\">\r\n                  <InputGroup className=\"label\">\r\n                    <Input\r\n                      className=\"email\"\r\n                      type=\"text\"\r\n                      placeholder=\"Enter Email Address...\"\r\n                      w=\"70%\"\r\n                      bgColor=\"white\"\r\n                      focusBorderColor=\"none\"\r\n                    />\r\n                    <InputGroup\r\n                      w={{ base: '45%', md: '30%', lg: '30%' }}\r\n                      className=\"inputbtn\"\r\n                    >\r\n                      <AiOutlineRight\r\n                        className=\"arrowright\"\r\n                        color=\"#FFFFFF\"\r\n                        zIndex=\"99\"\r\n                      />\r\n                      <Input\r\n                        className=\"btn-submit\"\r\n                        type=\"submit\"\r\n                        value=\"Subscribe\"\r\n                        bgColor=\"#9C4FFF\"\r\n                        marginLeft={{ base: '-2', md: '-10', lg: '-10' }}\r\n                        zIndex=\"10\"\r\n                      />\r\n                    </InputGroup>\r\n                  </InputGroup>\r\n                </form>\r\n              </Box>\r\n            </Box>\r\n\r\n            <Box paddingTop=\"8\">\r\n              <Heading as=\"h4\" size=\"sm\" paddingBottom=\"3\">\r\n                Bet on your beliefs\r\n              </Heading>\r\n              <Text className=\"footer\" fontSize={{ md: 'sm', lg: 'sm' }}>\r\n                Predictor is a decentralized information markets platform,\r\n                harnessing the power of free markets to demystify the real world\r\n                events that matter most to you.\r\n              </Text>\r\n            </Box>\r\n          </Box> */}\r\n        </Flex>\r\n        <Center paddingTop=\"7\">© 2022 Predictor. All rights reserved.</Center>\r\n      </Flex>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nconst PredictionContext = React.createContext({\r\n  predictions: {},\r\n  predictionsArray: [],\r\n  updatePredictions: () => {},\r\n});\r\n\r\nexport default PredictionContext;\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Box,\r\n  Container,\r\n  useColorModeValue,\r\n  Text,\r\n  Tabs,\r\n  TabList,\r\n  Tab,\r\n  TabPanels,\r\n  TabPanel,\r\n  Button,\r\n  RadioGroup,\r\n  Stack,\r\n  Radio,\r\n  NumberInput,\r\n  NumberInputField,\r\n  Accordion,\r\n  AccordionItem,\r\n  AccordionButton,\r\n  AccordionPanel,\r\n  Flex,\r\n  FormControl,\r\n} from '@chakra-ui/react';\r\nimport PredictionContext from '../../helper/PredictionContext';\r\nimport { useParams } from 'react-router-dom';\r\nimport Loading from '../../helper/Loading';\r\nimport { CONTRACT_ADDRESS, wallet } from '../../helper/tezos';\r\nimport heroPurple from '../assets/Homepage-bg-purple.png';\r\nimport './index.css';\r\n\r\nconst BuySellWindow = ({ id, options }) => {\r\n  const [request, setRequest] = React.useState({\r\n    option: options[0],\r\n    quantity: 0,\r\n  });\r\n\r\n  const buySubmit = async (e) => {\r\n    e.preventDefault();\r\n    const { option, quantity } = e.target.elements;\r\n\r\n    const contract = await wallet.at(CONTRACT_ADDRESS);\r\n    id = Number(id);\r\n\r\n    const op = await contract.methods.voteOnprediction(id, option.value).send({\r\n      amount: parseFloat(quantity.value / 100),\r\n    });\r\n\r\n    await op.confirmation(1);\r\n    alert('Transaction Completed!');\r\n  };\r\n\r\n  return (\r\n    <Tabs variant=\"soft-rounded\" width=\"100%\" padding=\"0\" margin=\"0\">\r\n      {/* <TabList>\r\n        <Tab>Options</Tab>\r\n      </TabList> */}\r\n      <TabPanels padding=\"0\" margin=\"0\">\r\n        <TabPanel padding=\"0\" margin=\"0\">\r\n          <form onSubmit={buySubmit}>\r\n            <Container\r\n              display=\"flex\"\r\n              flexDirection=\"column\"\r\n              padding=\"0\"\r\n              margin=\"0\"\r\n              gap=\"3\"\r\n            >\r\n              <Box padding=\"0\" margin=\"0\">\r\n                <Text fontWeight=\"bold\" fontSize=\"md\" py=\"2\">\r\n                  Pick an option\r\n                </Text>\r\n                <RadioGroup\r\n                  onChange={(e) =>\r\n                    setRequest((request) => {\r\n                      return {\r\n                        ...request,\r\n                        option: e,\r\n                      };\r\n                    })\r\n                  }\r\n                  value={request.option}\r\n                  name=\"option\"\r\n                >\r\n                  <Stack\r\n                    display=\"flex\"\r\n                    direction=\"row\"\r\n                    justifyContent=\"space-between\"\r\n                  >\r\n                    {options.map((option, i) => {\r\n                      return (\r\n                        <Radio key={i} value={option}>\r\n                          <Box\r\n                            borderWidth=\"1px\"\r\n                            borderColor=\"gray.400\"\r\n                            py=\"2\"\r\n                            px=\"7\"\r\n                            borderRadius=\"2xl\"\r\n                          >\r\n                            {option}\r\n                          </Box>\r\n                        </Radio>\r\n                      );\r\n                    })}\r\n                  </Stack>\r\n                </RadioGroup>\r\n              </Box>\r\n              <Box>\r\n                <Text fontWeight=\"bold\" fontSize=\"lg\">\r\n                  Amount of shares\r\n                </Text>\r\n                <NumberInput\r\n                  isRequired\r\n                  placeholder=\"Shares\"\r\n                  onChange={(e) =>\r\n                    setRequest((request) => {\r\n                      return {\r\n                        ...request,\r\n                        quantity: e,\r\n                      };\r\n                    })\r\n                  }\r\n                  value={request.quantity}\r\n                  name=\"quantity\"\r\n                >\r\n                  <NumberInputField />\r\n                </NumberInput>\r\n              </Box>\r\n              <Box>\r\n                <Button w=\"100%\" bgColor=\"#9C4FFF\" type=\"submit\">\r\n                  Buy\r\n                </Button>\r\n              </Box>\r\n            </Container>\r\n          </form>\r\n        </TabPanel>\r\n      </TabPanels>\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nexport default function Predict() {\r\n  let { id } = useParams();\r\n  console.log('ID ', id);\r\n  id = id.toString();\r\n  const { predictions } = React.useContext(PredictionContext);\r\n  const [data, setData] = React.useState(null);\r\n  const colors = {\r\n    bg: useColorModeValue('blue.100', 'blue.900'),\r\n    text: useColorModeValue('blue', 'white'),\r\n    border: useColorModeValue('purple.900', 'purple.100'),\r\n    cardBg: useColorModeValue('blue.200', 'blue.700'),\r\n  };\r\n\r\n  React.useEffect(async () => {\r\n    if (predictions) {\r\n      const _ = await predictions.get(id).then((value) => {\r\n        return value;\r\n      });\r\n      const contract = await wallet.at(CONTRACT_ADDRESS);\r\n      const storage = await contract.storage();\r\n      const snapshot = await storage.predictionVoteSnapshot\r\n        .get(id)\r\n        .then((value) => {\r\n          return value;\r\n        });\r\n      const snapshotList = [];\r\n\r\n      for (let pred of snapshot.keys()) {\r\n        if (pred != 'Total') {\r\n          snapshotList.push({\r\n            id: pred,\r\n            value: Math.round(\r\n              (snapshot.get(pred) * 100) / snapshot.get('Total')\r\n            ).toString(),\r\n          });\r\n        }\r\n\r\n        console.log(snapshotList);\r\n      }\r\n\r\n      let volume = (snapshot.get('Total') / 100).toString();\r\n      console.log('volume :', volume);\r\n\r\n      setData({\r\n        prediction: _.predictionName,\r\n        lastDate:\r\n          new Date(_.endTime).toLocaleDateString() +\r\n          ' ' +\r\n          new Date(_.endTime).toLocaleTimeString(),\r\n        key: id,\r\n        ref: _.predictionRef,\r\n        result: _.predictionVoteResult,\r\n        pstatus: _.predictionStatus,\r\n        options: _.predictionOptions,\r\n        snap: snapshotList,\r\n        Volume: volume,\r\n\r\n        disclosure:\r\n          \"Predictor is for informational and educational purposes only. We take no custody of anyone's money or cryptocurrency. Predictor displays existing markets live on the Tezos blockchain and is a graphical user interface for both visualizing data and market trends from on-chain activity, and interacting with said smart contracts directly via your Web 3 enabled wallet.\",\r\n      });\r\n    }\r\n  }, [predictions]);\r\n\r\n  return data ? (\r\n    <Container\r\n      maxWidth=\"100vw\"\r\n      width=\"auto\"\r\n      bgGradient=\"linear(to-r, #25203a, #181125)\"\r\n      height=\"auto\"\r\n      bgImage={heroPurple}\r\n      bgPosition=\"center\"\r\n      bgSize=\"cover\"\r\n      display=\"flex\"\r\n      flexDir=\"column\"\r\n      justifyContent=\"center\"\r\n      px={{ base: '7%', md: '15%', lg: '15%' }}\r\n      py={{ base: '10', md: '20', lg: '20' }}\r\n    >\r\n      <Accordion allowToggle margin=\"6\" className=\"accordion\">\r\n        <AccordionItem\r\n          bgColor=\"#9C4FFF\"\r\n          className=\"accordion\"\r\n          borderRadius=\"10\"\r\n          cursor=\"none\"\r\n        >\r\n          <h2>\r\n            <AccordionButton className=\"accordion\">\r\n              <Box flex=\"1\">Please Read this before making any purchases</Box>\r\n            </AccordionButton>\r\n          </h2>\r\n          <AccordionPanel p=\"6\">{data.disclosure}</AccordionPanel>\r\n        </AccordionItem>\r\n      </Accordion>\r\n      <Box bgColor=\"#180F2B\" borderRadius=\"20\">\r\n        <Box\r\n          p=\"6\"\r\n          borderRadius=\"lg\"\r\n          overflow=\"hidden\"\r\n          display=\"flex\"\r\n          flexDirection={{ base: 'column', md: 'row', lg: 'row' }}\r\n          flexWrap=\"wrap\"\r\n          w=\"100%\"\r\n          gap=\"5\"\r\n        >\r\n          <Flex w={{ base: '100%', md: '30%', lg: '30%' }}>\r\n            <Text fontSize=\"lg\">Prediction id: {data.ref} </Text>\r\n          </Flex>\r\n\r\n          <Flex\r\n            w={{ base: '100%', md: '70%', lg: '70%' }}\r\n            flexDirection=\"column\"\r\n            gap=\"5\"\r\n          >\r\n            <Text\r\n              fontSize=\"lg\"\r\n              fontWeight=\"bold\"\r\n              margin={{ base: '1', md: '1' }}\r\n              maxWidth=\"lg\"\r\n              overflow=\"visible\"\r\n              textOverflow=\"clip\"\r\n              color=\"#CEB0F5\"\r\n            >\r\n              {data.prediction}\r\n            </Text>\r\n            <Flex flexDirection=\"row\" w=\"100%\" justifyContent=\"space-between\">\r\n              <Flex w=\"50%\">\r\n                <Text fontSize=\"sm\">Open Till : </Text>\r\n                <Text fontSize=\"sm\"> {data.lastDate}</Text>\r\n              </Flex>\r\n\r\n              <Flex w=\"50%\">\r\n                <Text fontSize=\"sm\">Result : </Text>\r\n                <Text fontSize=\"sm\"> {data.result}</Text>\r\n              </Flex>\r\n            </Flex>\r\n\r\n            <Flex py=\"3\">\r\n              <Text fontSize=\"sm\">Status :</Text>\r\n              <Text fontSize=\"sm\">{data.pstatus}</Text>\r\n            </Flex>\r\n          </Flex>\r\n        </Box>\r\n\r\n        <Flex flexDirection=\"column\" padding=\"5\" w=\"100%\">\r\n          <Box className=\"mid\" py=\"5\">\r\n            <Text fontSize=\"lg\">Volume :</Text>\r\n\r\n            <Flex>\r\n              <Flex>\r\n                <Text color=\"white\">Total :</Text>\r\n                <Text color=\"white\">{data.Volume} Tez</Text>\r\n              </Flex>\r\n\r\n              {data.snap.map((pred, i) => {\r\n                return (\r\n                  <Flex flexDirection=\"row\" px=\"7\">\r\n                    <Box display=\"flex\">\r\n                      <Text>{pred.id} : </Text>\r\n                    </Box>\r\n\r\n                    <Box display=\"flex\">\r\n                      <Text>{pred.value} %</Text>\r\n                    </Box>\r\n                  </Flex>\r\n                );\r\n              })}\r\n            </Flex>\r\n          </Box>\r\n        </Flex>\r\n\r\n        <Box\r\n          margin=\"6\"\r\n          maxW=\"max-content\"\r\n          borderWidth=\"1px\"\r\n          borderRadius=\"lg\"\r\n          overflow=\"hidden\"\r\n          display=\"flex\"\r\n          flexDirection=\"row\"\r\n          flexWrap=\"wrap\"\r\n        >\r\n          <BuySellWindow id={id} options={data.options} />\r\n        </Box>\r\n      </Box>\r\n    </Container>\r\n  ) : (\r\n    <Loading />\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/phone.b064c002.png\";","export default __webpack_public_path__ + \"static/media/phone-purple.6a0b0f22.png\";","export default __webpack_public_path__ + \"static/media/Herobg.f160b25e.png\";","export default __webpack_public_path__ + \"static/media/tezo.ee19d7ef.png\";","import React from 'react';\r\nimport { Box, Flex, Container } from '@chakra-ui/layout';\r\nimport { Spinner } from '@chakra-ui/react';\r\nimport { Skeleton, SkeletonCircle, SkeletonText } from '@chakra-ui/react';\r\nimport heroBg from '../components/assets/Herobg.png';\r\n\r\nexport default function PageLoading() {\r\n  return (\r\n    <Container\r\n      height=\"100vh\"\r\n      w=\"100%\"\r\n      maxWidth=\"100%\"\r\n      padding=\"0\"\r\n      margin=\"0\"\r\n      display=\"flex\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n    >\r\n      <Flex\r\n        justifyContent=\"center\"\r\n        bgGradient=\"linear(to-r, #181125, #25203a)\"\r\n        borderRadius=\"10\"\r\n        w={{ base: '100%', md: '40%', lg: '40%' }}\r\n        padding={{ base: '5', md: '20', lg: '20' }}\r\n        height=\"auto\"\r\n      >\r\n        <Box\r\n          padding=\"6\"\r\n          w=\"100%\"\r\n          boxShadow=\"lg\"\r\n          bgGradient=\"linear(to-r, #2d2d40, #eaeaeb)\"\r\n          borderRadius=\"10px\"\r\n        >\r\n          <SkeletonCircle size=\"10\" />\r\n          <SkeletonText mt=\"4\" noOfLines={4} spacing=\"4\" />\r\n        </Box>\r\n      </Flex>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst pageLoading2 = () => {\r\n  return (\r\n    <Box\r\n      padding=\"6\"\r\n      w=\"100%\"\r\n      boxShadow=\"lg\"\r\n      bgGradient=\"linear(to-r, #2d2d40, #eaeaeb)\"\r\n      borderRadius=\"10px\"\r\n    >\r\n      <SkeletonCircle size=\"10\" />\r\n      <SkeletonText mt=\"4\" noOfLines={4} spacing=\"4\" />\r\n    </Box>\r\n  );\r\n};\r\n","import React, { useEffect, useState, useMemo } from 'react';\r\nimport './index.css';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Text,\r\n  Center,\r\n  useColorModeValue,\r\n  Accordion,\r\n  AccordionItem,\r\n  AccordionButton,\r\n  AccordionPanel,\r\n  Heading,\r\n  Image,\r\n  Select,\r\n  Link,\r\n  Flex,\r\n  Button,\r\n  bgImage,\r\n  InputGroup,\r\n  Input,\r\n  InputRightElement,\r\n  Stack,\r\n} from '@chakra-ui/react';\r\nimport PredictionContext from '../../helper/PredictionContext';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport phoneImg from '../assets/phone.png';\r\nimport { AiOutlineRight, AiOutlineSearch } from 'react-icons/ai';\r\n\r\nimport { AiFillCheckCircle } from 'react-icons/ai';\r\nimport { FaLongArrowAltRight } from 'react-icons/fa';\r\nimport { HiOutlineArrowSmLeft, HiOutlineArrowSmRight } from 'react-icons/hi';\r\nimport HeroBg from '../assets/Herobg.png';\r\nimport heroPurple from '../assets/Homepage-bg-purple.png';\r\nimport phonePurple from '../assets/phone-purple.png';\r\nimport tezo from '../assets/tezo.png';\r\n\r\nimport Loading from '../../helper/Loading';\r\nimport PageLoading from '../../helper/PageLoading';\r\nimport PageLoading3 from '../../helper/PageLoading3';\r\n\r\nexport default function Home() {\r\n  const { predictionsArray } = React.useContext(PredictionContext);\r\n  const [page, setPage] = useState(1);\r\n\r\n  const offset = 7;\r\n\r\n  const history = useNavigate();\r\n  const colors = {\r\n    bg: useColorModeValue('blue.100', 'blue.900'),\r\n    text: useColorModeValue('blue', 'white'),\r\n  };\r\n\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 3000);\r\n  }, []);\r\n\r\n  const inProgressArray = predictionsArray.filter(function (prediction) {\r\n    return prediction.value.predictionStatus == 'Prediction In-Progress';\r\n  });\r\n  const completedArray = predictionsArray.filter(function (prediction) {\r\n    return prediction.value.predictionStatus != 'Prediction In-Progress';\r\n  });\r\n\r\n  const totalPage = () => {\r\n    return Math.ceil(completedArray.length / offset);\r\n  };\r\n\r\n  console.log(page * offset - offset, ' START');\r\n\r\n  console.log(page * offset, ' END');\r\n\r\n  return (\r\n    <Container\r\n      width=\"auto\"\r\n      maxWidth=\"100vw\"\r\n      className=\"main-container\"\r\n      height=\"auto\"\r\n      maxHeight=\"1000vh\"\r\n      paddingBottom=\"15vh\"\r\n      paddingStart=\"0\"\r\n      paddingEnd=\"0\"\r\n      bgGradient=\"linear(to-r, #25203a, #181125)\"\r\n    >\r\n      {loading ? (\r\n        <Loading />\r\n      ) : (\r\n        <Box w=\"100%\">\r\n          <Box\r\n            display=\"flex\"\r\n            width=\"100%\"\r\n            paddingStart={{ base: '5vw', md: '15vw', lg: '12vw' }}\r\n            paddingEnd={{ base: '5vw', md: '15vw', lg: '12vw' }}\r\n            paddingTop=\"15vh\"\r\n            paddingBottom=\"5vh\"\r\n            bgImage={heroPurple}\r\n            bgPosition=\"center\"\r\n            bgSize=\"cover\"\r\n            flexDirection={{ base: 'column', md: 'column', lg: 'row' }}\r\n            className=\"HeroSection\"\r\n          >\r\n            <Box\r\n              w={{ base: 'auto', md: '100%', lg: '55%' }}\r\n              display=\"flex\"\r\n              flexDirection={{ base: 'column', md: 'column', lg: 'column' }}\r\n            >\r\n              <Heading\r\n                className=\"mainfont\"\r\n                as=\"h2\"\r\n                fontWeight=\"semibold\"\r\n                size=\"4xl\"\r\n              >\r\n                Predict to EARN\r\n              </Heading>\r\n              <Flex\r\n                alignItems=\"center\"\r\n                justifyContent=\"start\"\r\n                height=\"auto\"\r\n                marginTop=\"7\"\r\n              >\r\n                <Text color=\"gray\">\r\n                  Decentralized Prediction Markets on Tezos\r\n                </Text>\r\n\r\n                <Image src={tezo} height=\"6vh\" width=\"6vh\" />\r\n              </Flex>\r\n\r\n              <Box\r\n                display=\"flex\"\r\n                justifyContent=\"space-between\"\r\n                width=\"70%\"\r\n                marginTop=\"7\"\r\n              >\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                  <AiFillCheckCircle color=\"#9C4FFF\" fontSize=\"21\" />\r\n                  &nbsp;&nbsp;<p>Decentralized</p>\r\n                </Box>\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                  <AiFillCheckCircle color=\"#9C4FFF\" fontSize=\"21\" />\r\n                  &nbsp;&nbsp;<p>Tez Payment</p>\r\n                </Box>\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                  <AiFillCheckCircle color=\"#9C4FFF\" fontSize=\"21\" />\r\n                  &nbsp;&nbsp;<p>24/7 availability</p>\r\n                </Box>\r\n              </Box>\r\n              <Box\r\n                marginTop=\"10\"\r\n                display=\"flex\"\r\n                flexDirection={{ base: 'column', md: 'row', lg: 'row' }}\r\n              >\r\n                <Link\r\n                  py=\"3\"\r\n                  px=\"10\"\r\n                  bgColor=\"#9C4FFF\"\r\n                  color=\"#343538\"\r\n                  borderRadius=\"15\"\r\n                  textAlign=\"center\"\r\n                  href=\"#featured\"\r\n                  className=\"links\"\r\n                  _focus={{ outline: 'none' }}\r\n                >\r\n                  Get Started\r\n                </Link>\r\n                <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n                  <Link\r\n                    py=\"3\"\r\n                    href=\"/How\"\r\n                    paddingStart=\"10\"\r\n                    paddingEnd=\"3\"\r\n                    className=\"links\"\r\n                    _focus={{ outline: 'none' }}\r\n                  >\r\n                    Learn more\r\n                  </Link>\r\n                  <FaLongArrowAltRight fontSize=\"20\" paddingTop=\"20\" />\r\n                </Box>\r\n              </Box>\r\n              <Box\r\n                display=\"flex\"\r\n                justifyContent=\"space-between\"\r\n                width={{ base: '100%', md: '70%', lg: '70%' }}\r\n                marginTop=\"10\"\r\n              >\r\n                <Box display=\"flex\" flexDirection=\"column\" alignItems=\"start\">\r\n                  <Heading\r\n                    as=\"h3\"\r\n                    fontWeight=\"semibold\"\r\n                    size=\"xl\"\r\n                    color=\"#9C4FFF\"\r\n                  >\r\n                    200+\r\n                  </Heading>\r\n                  <p>Markets</p>\r\n                </Box>\r\n                <Box display=\"flex\" flexDirection=\"column\" alignItems=\"start\">\r\n                  <Heading\r\n                    as=\"h3\"\r\n                    fontWeight=\"semibold\"\r\n                    size=\"xl\"\r\n                    color=\"#9C4FFF\"\r\n                  >\r\n                    9000+\r\n                  </Heading>\r\n                  <p>Active Users</p>\r\n                </Box>\r\n                <Box display=\"flex\" flexDirection=\"column\" alignItems=\"start\">\r\n                  <Heading\r\n                    as=\"h3\"\r\n                    fontWeight=\"semibold\"\r\n                    size=\"xl\"\r\n                    color=\"#9C4FFF\"\r\n                  >\r\n                    10M+\r\n                  </Heading>\r\n                  <p>Transactions</p>\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n            <Box\r\n              w={{ base: '100%', md: '100%', lg: '45%' }}\r\n              display=\"flex\"\r\n              justifyContent=\"center\"\r\n            >\r\n              <Image\r\n                boxSize={{ base: '400px', md: '700px', lg: '700px' }}\r\n                objectFit=\"cover\"\r\n                marginTop={{ base: '0px', md: '-100px', lg: '-100px' }}\r\n                src={phonePurple}\r\n                className=\"phoneImg\"\r\n              />\r\n            </Box>\r\n          </Box>\r\n\r\n          <Box\r\n            display=\"flex\"\r\n            flexWrap=\"wrap\"\r\n            paddingStart={{ base: '5vh', md: '25vh', lg: '25vh' }}\r\n            paddingEnd={{ base: '5vh', md: '25vh', lg: '25vh' }}\r\n            paddingTop=\"6vh\"\r\n            id=\"featured\"\r\n          >\r\n            <Heading as=\"h3\" fontWeight=\"semibold\" margin=\"0px\" size=\"lg\">\r\n              FEATURED MARKETS\r\n            </Heading>\r\n\r\n            <Box\r\n              display=\"flex\"\r\n              flexDirection={{ base: 'column', md: 'column', lg: 'row' }}\r\n              flexWrap=\"wrap\"\r\n              w=\"100%\"\r\n              alignItems=\"center\"\r\n              justifyContent=\"space-between\"\r\n              marginTop=\"5vh\"\r\n            >\r\n              {inProgressArray.map((pred, i) => {\r\n                return (\r\n                  <Box\r\n                    key={i}\r\n                    onClick={() => history('/predict/' + pred.id)}\r\n                    display=\"flex\"\r\n                    w={{ base: '100%', md: '100%', lg: '29%' }}\r\n                    borderRadius=\"10px\"\r\n                    flexDirection=\"row\"\r\n                    padding=\"20px\"\r\n                    backgroundColor=\"#180F2B\"\r\n                    marginBottom=\"4vh\"\r\n                    height=\"32vh\"\r\n                    alignItems=\"center\"\r\n                    flexWrap=\"wrap\"\r\n                    px=\"5\"\r\n                    className=\"topBox\"\r\n                  >\r\n                    <Box\r\n                      display=\"flex\"\r\n                      flexDirection=\"row\"\r\n                      flexWrap=\"wrap\"\r\n                      height=\"auto\"\r\n                    >\r\n                      <Box w=\"20%\" display=\"flex\" alignItems=\"center\">\r\n                        <Text\r\n                          py=\"3\"\r\n                          px=\"2\"\r\n                          borderRadius=\"60%\"\r\n                          backgroundColor={'#9C4FFF'}\r\n                          fontWeight=\"bold\"\r\n                          border=\"1px solid\"\r\n                          borderColor=\"#22EF01\"\r\n                          fontSize=\"xs\"\r\n                          cursor=\"pointer\"\r\n                          className=\"circle\"\r\n                        >\r\n                          ID:\r\n                          {pred.value.predictionRef}\r\n                        </Text>\r\n                      </Box>\r\n\r\n                      <Box w=\"80%\" className=\"predBox\">\r\n                        <Text\r\n                          color={'#CEB0F5'}\r\n                          fontSize=\"lg\"\r\n                          paddingStart=\"2\"\r\n                          cursor=\"pointer\"\r\n                          className=\"predictionName\"\r\n                        >\r\n                          {' '}\r\n                          {pred.value.predictionName}{' '}\r\n                        </Text>\r\n                        <Text\r\n                          paddingStart=\"2\"\r\n                          paddingTop=\"3\"\r\n                          fontSize=\"sm\"\r\n                          className=\"predictionName\"\r\n                        >\r\n                          <b>Status:</b> {pred.value.predictionStatus}\r\n                        </Text>\r\n                      </Box>\r\n                    </Box>\r\n                  </Box>\r\n                );\r\n              })}\r\n            </Box>\r\n\r\n            <Box\r\n              display=\"flex\"\r\n              flexDirection=\"row\"\r\n              flexWrap=\"wrap\"\r\n              w=\"100%\"\r\n              paddingStart={{ base: '3', md: '10', lg: '10' }}\r\n              paddingEnd={{ base: '3', md: '10', lg: '10' }}\r\n              paddingTop=\"5\"\r\n              paddingBottom=\"5\"\r\n              bgColor=\"white\"\r\n              borderRadius=\"10\"\r\n              marginTop=\"20\"\r\n            >\r\n              <Box w={{ base: '60%', md: '50%', lg: '50%' }}>\r\n                <Text color=\"black\">Market</Text>\r\n              </Box>\r\n              <Box w={{ base: '40%', md: '50%', lg: '40%' }}>\r\n                <Center color=\"black\">Status</Center>\r\n              </Box>\r\n              <Box w=\"10%\" display={{ base: 'none', md: 'block', lg: 'block' }}>\r\n                <Center color=\"black\">Results</Center>\r\n              </Box>\r\n            </Box>\r\n            <Box\r\n              display=\"flex\"\r\n              flexDirection=\"column\"\r\n              flexWrap=\"wrap\"\r\n              w=\"100%\"\r\n              marginTop=\"5\"\r\n            >\r\n              {completedArray\r\n                .slice(page * offset - offset, page * offset)\r\n                .map((pred, i) => {\r\n                  return (\r\n                    <Box\r\n                      key={i}\r\n                      onClick={() => history('/predict/' + pred.id)}\r\n                      display=\"flex\"\r\n                      maxWidth=\"100%\"\r\n                      borderBottom=\"1px solid\"\r\n                      borderColor=\"gray\"\r\n                      flexDirection=\"row\"\r\n                      padding={{ base: '0px', md: '20px', lg: '20px' }}\r\n                      margin={{ base: '0px', md: '10px', lg: '10px' }}\r\n                    >\r\n                      <Box\r\n                        display=\"flex\"\r\n                        alignItems=\"center\"\r\n                        flexWrap=\"wrap\"\r\n                        w=\"100%\"\r\n                        flexDirection={{ base: 'row', md: 'row', lg: 'row' }}\r\n                        marginTop={{ base: '12px', md: '0px', lg: '0px' }}\r\n                        marginBottom={{ base: '12px', md: '0px', lg: '0px' }}\r\n                      >\r\n                        <Box\r\n                          w={{ base: '20%', md: '5%', lg: '7%' }}\r\n                          display=\"flex\"\r\n                          justifyContent=\"center\"\r\n                          flexDirection=\"column\"\r\n                          alignItems=\"center\"\r\n                        >\r\n                          <Text\r\n                            py=\"3\"\r\n                            px=\"2\"\r\n                            borderRadius=\"50%\"\r\n                            backgroundColor={'#9C4FFF'}\r\n                            fontWeight=\"bold\"\r\n                            border=\"1px solid\"\r\n                            borderColor=\"#22EF01\"\r\n                            fontSize=\"xs\"\r\n                          >\r\n                            ID:{pred.value.predictionRef}\r\n                          </Text>\r\n                        </Box>\r\n\r\n                        <Box\r\n                          w={{ base: '50%', md: '55%', lg: '50%' }}\r\n                          paddingEnd={{ base: '2', md: '10', lg: '10' }}\r\n                          paddingStart={{ base: '2', md: '3', lg: '3' }}\r\n                        >\r\n                          <Text\r\n                            color=\"white\"\r\n                            cursor=\"pointer\"\r\n                            fontSize={{ base: 'xs', md: 'md', lg: 'md' }}\r\n                          >\r\n                            {' '}\r\n                            {pred.value.predictionName}{' '}\r\n                          </Text>\r\n                        </Box>\r\n\r\n                        <Box w=\"30%\">\r\n                          <Center\r\n                            color={'#6EFB57'}\r\n                            fontSize={{ base: 'xs', md: 'md', lg: 'md' }}\r\n                          >\r\n                            {pred.value.predictionStatus}\r\n                          </Center>\r\n                        </Box>\r\n                      </Box>\r\n                    </Box>\r\n                  );\r\n                })}\r\n            </Box>\r\n            <Flex\r\n              justifyContent=\"center\"\r\n              alignItems=\"center\"\r\n              marginTop=\"6vh\"\r\n              w=\"100%\"\r\n            >\r\n              <Button\r\n                bgColor=\"#3B3A3A\"\r\n                color=\"white\"\r\n                px=\"4\"\r\n                py=\"2\"\r\n                borderColor=\"white\"\r\n                border=\"1px solid\"\r\n                className=\"h-btn\"\r\n                _focus={{ outline: 'none' }}\r\n                onClick={() => {\r\n                  setPage(page <= 1 ? 1 : page - 1);\r\n                }}\r\n              >\r\n                <HiOutlineArrowSmLeft fontSize=\"22\" />\r\n              </Button>\r\n\r\n              <Box display=\"flex\" alignItems=\"center\">\r\n                <Text px=\"3\">Page/s</Text>\r\n                <Button\r\n                  bgColor=\"#3B3A3A\"\r\n                  color=\"white\"\r\n                  px=\"4\"\r\n                  py=\"2\"\r\n                  borderColor=\"white\"\r\n                  border=\"1px solid\"\r\n                  className=\"h-btn\"\r\n                  _focus={{ outline: 'none' }}\r\n                >\r\n                  {page}\r\n                </Button>\r\n                <Text px=\"3\">of {totalPage()}</Text>\r\n              </Box>\r\n\r\n              <Button\r\n                bgColor=\"#3B3A3A\"\r\n                color=\"white\"\r\n                px=\"4\"\r\n                py=\"2\"\r\n                borderColor=\"white\"\r\n                border=\"1px solid\"\r\n                className=\"h-btn\"\r\n                _focus={{ outline: 'none' }}\r\n                onClick={() => {\r\n                  setPage(page >= totalPage() - 1 ? totalPage() : page + 1);\r\n                }}\r\n              >\r\n                <HiOutlineArrowSmRight fontSize=\"22\" />\r\n              </Button>\r\n            </Flex>\r\n          </Box>\r\n        </Box>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Box, Flex, Container } from '@chakra-ui/layout';\r\nimport { Spinner } from '@chakra-ui/react';\r\nimport { Skeleton, SkeletonCircle, SkeletonText } from '@chakra-ui/react';\r\nimport heroBg from '../components/assets/Herobg.png';\r\n\r\nexport default function PageLoading2() {\r\n  return (\r\n    <Flex\r\n      justifyContent=\"center\"\r\n      bgGradient=\"linear(to-r, #181125, #25203a)\"\r\n      borderRadius=\"10\"\r\n      w={{ base: '100%', md: '100%', lg: '100%' }}\r\n      padding={{ base: '5', md: '10', lg: '10' }}\r\n      height=\"auto\"\r\n    >\r\n      <Box\r\n        padding=\"3\"\r\n        w=\"100%\"\r\n        boxShadow=\"lg\"\r\n        bgGradient=\"linear(to-r, #2d2d40, #eaeaeb)\"\r\n        borderRadius=\"10px\"\r\n      >\r\n        <SkeletonCircle size=\"10\" />\r\n        <SkeletonText mt=\"4\" noOfLines={4} spacing=\"4\" />\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Predictions-Background.4c014538.png\";","import React, { useEffect, useState } from 'react';\r\nimport PageLoading from '../../helper/PageLoading2';\r\nimport PredictionContext from '../../helper/PredictionContext';\r\nimport portfolioBG from '../assets/Predictions-Background.png';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  NumberInput,\r\n  Popover,\r\n  Heading,\r\n  PopoverBody,\r\n  PopoverContent,\r\n  PopoverHeader,\r\n  PopoverTrigger,\r\n  Radio,\r\n  RadioGroup,\r\n  Stack,\r\n  Text,\r\n  useColorModeValue,\r\n} from '@chakra-ui/react';\r\nimport { useWallet } from '../../helper/WalletContext';\r\nimport Loading from '../../helper/Loading';\r\nimport {\r\n  CONTRACT_ADDRESS,\r\n  wallet,\r\n  Tezos,\r\n  TOKEN_ADDRESS,\r\n} from '../../helper/tezos';\r\n\r\nconst AddPredRes = ({ pred }) => {\r\n  const colors = {\r\n    bg: useColorModeValue('blue.200', 'blue.700'),\r\n    text: useColorModeValue('blue', 'white'),\r\n  };\r\n\r\n  const submit = async (e) => {\r\n    e.preventDefault();\r\n    const { option } = e.target.elements;\r\n    console.log(option.value);\r\n    const contract = await wallet.at(CONTRACT_ADDRESS);\r\n    const result = await contract.methods\r\n      .predictResults(pred.predictionRef, option.value)\r\n      .send();\r\n    await result.confirmation(1);\r\n    alert('Result Updated!');\r\n  };\r\n\r\n  return (\r\n    <Popover returnFocusOnClose={false} placement=\"right\" closeOnBlur={false}>\r\n      <PopoverTrigger>\r\n        <Button bg={colors.bg} textColor={colors.text} marginLeft=\"10px\">\r\n          Result\r\n        </Button>\r\n      </PopoverTrigger>\r\n      <PopoverContent textColor={colors.text}>\r\n        <PopoverHeader fontWeight=\"semibold\">\r\n          Update Prediction Result\r\n        </PopoverHeader>\r\n        <PopoverBody>\r\n          <form onSubmit={submit}>\r\n            <FormControl>\r\n              <FormLabel htmlFor={pred.id + '_status'}>Options</FormLabel>\r\n              <RadioGroup name=\"option\">\r\n                <Stack direction=\"column\">\r\n                  {pred.predictionOptions.map((option, i) => {\r\n                    return (\r\n                      <Radio key={i} value={option}>\r\n                        <Box\r\n                          borderWidth=\"1px\"\r\n                          borderColor=\"purple.400\"\r\n                          p=\"2\"\r\n                          borderRadius=\"2xl\"\r\n                        >\r\n                          {option}\r\n                        </Box>\r\n                      </Radio>\r\n                    );\r\n                  })}\r\n                </Stack>\r\n              </RadioGroup>\r\n            </FormControl>\r\n            <Button type=\"submit\">Submit</Button>\r\n          </form>\r\n        </PopoverBody>\r\n      </PopoverContent>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nconst UpdatePredStatus = ({ pred }) => {\r\n  const colors = {\r\n    bg: \"useColorModeValue('blue.200', 'blue.700')\",\r\n    text: useColorModeValue('blue', 'white'),\r\n  };\r\n\r\n  const submit = async (e) => {\r\n    e.preventDefault();\r\n    const { status } = e.target.elements;\r\n\r\n    const contract = await wallet.at(CONTRACT_ADDRESS);\r\n    const st = await contract.methods\r\n      .updateStatus(pred.predictionRef, status.value)\r\n      .send();\r\n    st.confirmation();\r\n    alert('Status Updated!');\r\n  };\r\n  return (\r\n    <Popover returnFocusOnClose={false} placement=\"right\" closeOnBlur={false}>\r\n      <PopoverTrigger>\r\n        <Button bg={colors.bg} textColor={colors.text}>\r\n          Update\r\n        </Button>\r\n      </PopoverTrigger>\r\n      <PopoverContent textColor={colors.text}>\r\n        <PopoverHeader fontWeight=\"semibold\">\r\n          Update Prediction Status\r\n        </PopoverHeader>\r\n        <PopoverBody>\r\n          <form onSubmit={submit}>\r\n            <FormControl>\r\n              <FormLabel htmlFor={pred.id + '_status'}>Status</FormLabel>\r\n              <RadioGroup name=\"status\">\r\n                <Stack direction=\"column\">\r\n                  {[\r\n                    'Prediction In-Progress',\r\n                    'Prediction Ended',\r\n                    'Result Declared',\r\n                    'Cancelled',\r\n                  ].map((option, i) => {\r\n                    return (\r\n                      <Radio key={i} value={option}>\r\n                        <Box\r\n                          borderWidth=\"1px\"\r\n                          borderColor=\"purple.400\"\r\n                          p=\"2\"\r\n                          borderRadius=\"2xl\"\r\n                        >\r\n                          {option}\r\n                        </Box>\r\n                      </Radio>\r\n                    );\r\n                  })}\r\n                </Stack>\r\n              </RadioGroup>\r\n            </FormControl>\r\n            <Button type=\"submit\">Submit</Button>\r\n          </form>\r\n        </PopoverBody>\r\n      </PopoverContent>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nconst AddNewPrediction = () => {\r\n  const [num, setNum] = React.useState(0);\r\n  // const { connected, connect, activeAccount } = useWallet();\r\n  const [options, setOptions] = React.useState({});\r\n  const { connect, disconnect, activeAccount, connected } = useWallet();\r\n\r\n  const submit = async (e) => {\r\n    e.preventDefault();\r\n    const { prediction, resultRef, start, end } = e.target.elements;\r\n\r\n    const contract = await wallet.at(CONTRACT_ADDRESS);\r\n    const endValue = new Date(end.value).toISOString();\r\n    const startValue = new Date(start.value).toISOString();\r\n\r\n    const op = await contract.methods\r\n      .addprediction(\r\n        endValue,\r\n        resultRef.value,\r\n        prediction.value,\r\n        Object.keys(options).map((key) => options[key]),\r\n        startValue\r\n      )\r\n      .send({ amount: 2 });\r\n    await op.confirmation(1);\r\n    alert('Prediction Created!');\r\n  };\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      justifyContent=\"center\"\r\n      w={{ base: '100%', md: '32%', lg: '32%' }}\r\n    >\r\n      {!connected ? (\r\n        <Box\r\n          padding=\"20\"\r\n          bgColor=\"#180F2Bed\"\r\n          borderRadius=\"10\"\r\n          w=\"100%\"\r\n          flexWrap=\"wrap\"\r\n          display=\"flex\"\r\n          justifyContent=\"center\"\r\n        >\r\n          <Button\r\n            onClick={connect}\r\n            color=\"black\"\r\n            px=\"20\"\r\n            borderRadius=\"20\"\r\n            bgColor=\"white\"\r\n          >\r\n            Connect Wallet\r\n          </Button>\r\n        </Box>\r\n      ) : (\r\n        <Popover position=\"relative\">\r\n          <PopoverTrigger>\r\n            <Box\r\n              py=\"20\"\r\n              px={{ base: '10', md: '20', lg: '20' }}\r\n              bgColor=\"#180F2Bed\"\r\n              borderRadius=\"10\"\r\n              w={{ base: '100%', md: '100%', lg: '100%' }}\r\n              display=\"flex\"\r\n              flexWrap=\"wrap\"\r\n              justifyContent=\"center\"\r\n            >\r\n              <Button bgColor=\"white\" color=\"black\" px=\"20\" borderRadius=\"20\">\r\n                Add New Predictions\r\n              </Button>\r\n            </Box>\r\n          </PopoverTrigger>\r\n          <PopoverContent\r\n            padding=\"4\"\r\n            bgColor=\"#1A1A1A\"\r\n            position=\"absolute\"\r\n            top=\"-300\"\r\n            left=\"-160\"\r\n            _focus={{ outline: 'red' }}\r\n          >\r\n            <form onSubmit={submit}>\r\n              <FormControl>\r\n                <FormLabel htmlFor=\"prediction\">Prediction</FormLabel>\r\n                <Input\r\n                  name=\"prediction\"\r\n                  id=\"prediction\"\r\n                  _focus={{ color: 'white' }}\r\n                ></Input>\r\n              </FormControl>\r\n              <FormControl>\r\n                <FormLabel htmlFor=\"resultRef\">Result Reference</FormLabel>\r\n                <Input\r\n                  name=\"resultRef\"\r\n                  id=\"resultRef\"\r\n                  _focus={{ color: 'white' }}\r\n                ></Input>\r\n              </FormControl>\r\n              <FormControl>\r\n                <FormLabel htmlFor=\"start\">Start</FormLabel>\r\n                <Input\r\n                  type=\"datetime-local\"\r\n                  name=\"start\"\r\n                  id=\"start\"\r\n                  _focus={{ color: 'white' }}\r\n                ></Input>\r\n              </FormControl>\r\n              <FormControl>\r\n                <FormLabel htmlFor=\"end\">End</FormLabel>\r\n                <Input\r\n                  type=\"datetime-local\"\r\n                  name=\"end\"\r\n                  id=\"end\"\r\n                  _focus={{ color: 'white' }}\r\n                ></Input>\r\n              </FormControl>\r\n              <FormControl>\r\n                <FormLabel htmlFor=\"number_options\">\r\n                  Number of Options\r\n                </FormLabel>\r\n                <Input\r\n                  onChange={(e) => {\r\n                    console.log(e);\r\n                    setNum(parseInt(e.target.value) || 0);\r\n                  }}\r\n                  name=\"number_options\"\r\n                  id=\"number_options\"\r\n                  type=\"number\"\r\n                  _focus={{ color: 'white' }}\r\n                ></Input>\r\n              </FormControl>\r\n              {[...Array(num).keys()].map((i) => {\r\n                return (\r\n                  <FormControl>\r\n                    <FormLabel htmlFor={'option_' + i}>Option {i}</FormLabel>\r\n                    <Input\r\n                      onChange={(e) =>\r\n                        setOptions((options) => {\r\n                          var opt = options;\r\n                          opt[`option_${i}`] = e.target.value;\r\n                          return opt;\r\n                        })\r\n                      }\r\n                      name={`option_${i}`}\r\n                      id={`option_${i}`}\r\n                      _focus={{ color: 'white' }}\r\n                    ></Input>\r\n                  </FormControl>\r\n                );\r\n              })}\r\n              <Button marginTop=\"5\" type=\"submit\" bgColor=\"#9C4FFF\">\r\n                Submit\r\n              </Button>\r\n            </form>\r\n          </PopoverContent>\r\n        </Popover>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default function MyPreds() {\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 3000);\r\n  }, []);\r\n\r\n  const { predictionsArray } = React.useContext(PredictionContext);\r\n  const { connected, connect, activeAccount } = useWallet();\r\n  const [myPreds, setMyPreds] = React.useState([]);\r\n  const colors = {\r\n    bg: useColorModeValue('blue.100', 'blue.900'),\r\n    text: useColorModeValue('blue', 'white'),\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    (async function () {\r\n      if (!connected) {\r\n        await connect();\r\n      }\r\n      const contract = await wallet.at(CONTRACT_ADDRESS);\r\n      const storage = await contract.storage();\r\n      const admin = storage.admin;\r\n      console.log(admin);\r\n      if (activeAccount) {\r\n        const _ = [];\r\n        for (let x = 0; x < predictionsArray.length; x++) {\r\n          let item = predictionsArray[x].value;\r\n          if (\r\n            item.proposer === activeAccount.address ||\r\n            admin === activeAccount.address\r\n          ) {\r\n            _.push(item);\r\n          }\r\n        }\r\n        console.log(_);\r\n        setMyPreds(_);\r\n      }\r\n    })();\r\n  }, [activeAccount]);\r\n\r\n  return myPreds ? (\r\n    <Container\r\n      px={{ base: '8', md: '20', lg: '20' }}\r\n      display=\"flex\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n      height=\"100vh\"\r\n      bgImage={portfolioBG}\r\n      bgPosition=\"center\"\r\n      bgSize=\"cover\"\r\n      w=\"100%\"\r\n      maxWidth=\"100%\"\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent={'space-between'}\r\n        height=\"60vh\"\r\n        flexDirection=\"column\"\r\n        w=\"100%\"\r\n      >\r\n        <Heading\r\n          className=\"mainfont\"\r\n          as=\"h2\"\r\n          fontWeight=\"semibold\"\r\n          fontSize={{ base: '4xl', md: '4xl', lg: '7xl' }}\r\n          textAlign={{ base: 'center', md: 'left', lg: 'left' }}\r\n        >\r\n          Predictions\r\n        </Heading>\r\n        <Box display=\"flex\" justifyContent=\"center\">\r\n          {loading ? (\r\n            <Box\r\n              display={{ base: 'flex', md: 'flex' }}\r\n              flexWrap=\"wrap\"\r\n              w={{ base: '100%', md: '32%', lg: '32%' }}\r\n            >\r\n              <PageLoading />\r\n            </Box>\r\n          ) : (\r\n            <AddNewPrediction />\r\n          )}\r\n        </Box>\r\n\r\n        <Box display=\"flex\" flexDirection=\"row\" flexWrap=\"wrap\">\r\n          {myPreds.map((pred, i) => {\r\n            return (\r\n              <Box\r\n                key={i}\r\n                // onClick={}\r\n                display=\"flex\"\r\n                maxWidth=\"300px\"\r\n                border=\"1px solid\"\r\n                borderRadius=\"15px\"\r\n                padding=\"20px\"\r\n                margin=\"10px\"\r\n              >\r\n                <Text color={colors.text}>{pred.predictionName}</Text>\r\n                <UpdatePredStatus pred={pred} />\r\n                <AddPredRes pred={pred} />\r\n              </Box>\r\n            );\r\n          })}\r\n        </Box>\r\n      </Box>\r\n    </Container>\r\n  ) : (\r\n    <Loading />\r\n  );\r\n}\r\n\r\nconst Portfolio = () => {\r\n  //const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const colors = {\r\n    bg: useColorModeValue('blue.100', 'blue.900'),\r\n    text: useColorModeValue('blue', 'white'),\r\n  };\r\n  const { connect, disconnect, activeAccount, connected } = useWallet();\r\n  const [data, setData] = React.useState(null);\r\n  let ledger = [];\r\n  React.useEffect(async () => {\r\n    if (!connected) {\r\n      await connect();\r\n    }\r\n    if (activeAccount) {\r\n      console.log(activeAccount);\r\n      console.log(activeAccount.address);\r\n      const tokenContract = await Tezos.contract.at(TOKEN_ADDRESS);\r\n      const tokenStore = await tokenContract.storage();\r\n      const tokenLedger = tokenStore.ledger;\r\n      console.log(tokenLedger);\r\n      let tokens = tokenStore.all_tokens.toString().split(',').map(Number);\r\n      console.log(tokens);\r\n\r\n      for (let tokenId = tokens.length - 1; tokenId >= 0; tokenId--) {\r\n        console.log(tokenId, tokens[tokenId]);\r\n        await tokenLedger\r\n          .get([activeAccount.address, tokens[tokenId]])\r\n          .then((value) => {\r\n            ledger.push({ id: tokens[tokenId], balance: value.toString() });\r\n          })\r\n          .catch((error) =>\r\n            console.log(`Error: ${tokens[tokenId]} ${activeAccount.address}`)\r\n          );\r\n        console.log(ledger);\r\n      }\r\n\r\n      setData(ledger);\r\n    }\r\n  }, [activeAccount]);\r\n  return data ? (\r\n    <Container\r\n      width=\"100%\"\r\n      maxWidth=\"100vw\"\r\n      // bg={colors.bg}\r\n      bgColor=\"red\"\r\n      height=\"auto\"\r\n      maxHeight=\"100vh\"\r\n    >\r\n      <Text color={colors.text}>Portfolio</Text>\r\n      <Box display=\"flex\" flexDirection=\"column\" flexWrap=\"wrap\" bgColor=\"blue\">\r\n        {data.map((pred, i) => {\r\n          return (\r\n            <Box\r\n              key={i}\r\n              // onClick={}\r\n              display=\"flex\"\r\n              maxWidth=\"300px\"\r\n              flexDirection=\"row\"\r\n              border=\"1px solid\"\r\n              borderRadius=\"15px\"\r\n              padding=\"20px\"\r\n              margin=\"10px\"\r\n            >\r\n              <Text color={colors.text}>\r\n                Token id &nbsp;: &nbsp; {pred.id} &nbsp;\r\n              </Text>\r\n              <Text color={colors.text}>\r\n                Balance &nbsp; :&nbsp; {pred.balance}\r\n              </Text>\r\n            </Box>\r\n          );\r\n        })}\r\n      </Box>\r\n    </Container>\r\n  ) : (\r\n    <Loading />\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/Redeem-Background.fe558f01.png\";","import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport {\r\n  Box,\r\n  Flex,\r\n  HStack,\r\n  Container,\r\n  IconButton,\r\n  Button,\r\n  Image,\r\n  Heading,\r\n  Menu,\r\n  MenuButton,\r\n  MenuList,\r\n  MenuItem,\r\n  useDisclosure,\r\n  useColorModeValue,\r\n  Stack,\r\n  useColorMode,\r\n  Text,\r\n  Link,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalBody,\r\n  FormControl,\r\n  FormLabel,\r\n  Popover,\r\n  PopoverBody,\r\n  PopoverContent,\r\n  PopoverHeader,\r\n  PopoverTrigger,\r\n  Input,\r\n} from '@chakra-ui/react';\r\nimport { HamburgerIcon, CloseIcon, SunIcon, MoonIcon } from '@chakra-ui/icons';\r\nimport { useWallet } from '../../helper/WalletContext';\r\nimport {\r\n  CONTRACT_ADDRESS,\r\n  TOKEN_ADDRESS,\r\n  wallet,\r\n  Tezos,\r\n} from '../../helper/tezos';\r\nimport { TezosToolkit, MichelCodecPacker, compose } from '@taquito/taquito';\r\nimport redeemBg from '../assets/Redeem-Background.png';\r\n\r\nconst Redeem = () => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const submit = async (e) => {\r\n    e.preventDefault();\r\n    const { tokenId, amount } = e.target.elements;\r\n    console.log(tokenId.value, amount.value);\r\n    const contract = await wallet.at(CONTRACT_ADDRESS);\r\n\r\n    const op = await contract.methods\r\n      .redeemTokens(parseInt(amount.value), parseInt(tokenId.value))\r\n      .send();\r\n    await op.confirmation(1);\r\n    alert('Redemption Completed!');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container\r\n        width=\"100%\"\r\n        maxWidth=\"100%\"\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        height=\"100vh\"\r\n        alignItems=\"center\"\r\n        bgImage={redeemBg}\r\n        bgPosition=\"center\"\r\n        bgSize=\"cover\"\r\n        px={{ base: '10', md: '20', lg: '20' }}\r\n      >\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent={'space-between'}\r\n          height=\"60vh\"\r\n          flexDirection=\"column\"\r\n          w=\"100%\"\r\n        >\r\n          <Heading\r\n            className=\"mainfont\"\r\n            as=\"h2\"\r\n            fontWeight=\"semibold\"\r\n            size=\"4xl\"\r\n            textAlign=\"left\"\r\n          >\r\n            Redeem\r\n          </Heading>\r\n          <Flex justifyContent=\"center\">\r\n            <Box\r\n              display=\"flex\"\r\n              justifyContent=\"center\"\r\n              bgColor=\"#180F2B\"\r\n              w=\"40%\"\r\n              flexDirection=\"column\"\r\n              padding=\"10\"\r\n              borderRadius=\"20\"\r\n            >\r\n              <Text textAlign=\"center\">Redeem</Text>\r\n              <Box>\r\n                <Text textAlign=\"center\">Redeem Token</Text>\r\n                <Box bgColor=\"#180F2B\">\r\n                  <form onSubmit={submit}>\r\n                    <FormControl>\r\n                      <Input\r\n                        required\r\n                        type=\"number\"\r\n                        name=\"tokenId\"\r\n                        placeholder=\"Token ID\"\r\n                        _placeholder={{ color: 'white' }}\r\n                      ></Input>\r\n                    </FormControl>\r\n                    <FormControl marginTop=\"5\">\r\n                      <Input\r\n                        required\r\n                        type=\"number\"\r\n                        name=\"amount\"\r\n                        placeholder=\"Amount\"\r\n                        _placeholder={{ color: 'white' }}\r\n                      />\r\n                    </FormControl>\r\n                    <Flex justifyContent=\"center\" marginTop=\"5\">\r\n                      <Button\r\n                        type=\"submit\"\r\n                        bgColor=\"white\"\r\n                        color=\"black\"\r\n                        px=\"20\"\r\n                        borderRadius=\"20\"\r\n                      >\r\n                        Redeem\r\n                      </Button>\r\n                    </Flex>\r\n                  </form>\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n          </Flex>\r\n        </Box>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\nexport default Redeem;\r\n","export default __webpack_public_path__ + \"static/media/Portfolio-Background.a4b9b349.png\";","export default __webpack_public_path__ + \"static/media/Portfolio-bg.3469633d.png\";","import React, { useEffect, useState } from 'react';\r\n\r\nimport PageLoading from '../../helper/PageLoading2';\r\n\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport './Portfolio.css';\r\nimport { useWallet } from '../../helper/WalletContext';\r\nimport portfolioBG from '../assets/Portfolio-Background.png';\r\nimport portfolioPurple from '../assets/Portfolio-bg.png';\r\nimport {\r\n  Box,\r\n  Flex,\r\n  HStack,\r\n  Center,\r\n  Container,\r\n  IconButton,\r\n  Button,\r\n  Heading,\r\n  Menu,\r\n  MenuButton,\r\n  MenuList,\r\n  MenuItem,\r\n  useDisclosure,\r\n  useColorModeValue,\r\n  Stack,\r\n  useColorMode,\r\n  Text,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalBody,\r\n  FormControl,\r\n  FormLabel,\r\n  Popover,\r\n  PopoverBody,\r\n  PopoverContent,\r\n  PopoverHeader,\r\n  PopoverTrigger,\r\n  Input,\r\n} from '@chakra-ui/react';\r\nimport { HamburgerIcon, CloseIcon, SunIcon, MoonIcon } from '@chakra-ui/icons';\r\n\r\nimport {\r\n  CONTRACT_ADDRESS,\r\n  TOKEN_ADDRESS,\r\n  wallet,\r\n  Tezos,\r\n} from '../../helper/tezos';\r\nimport { TezosToolkit, MichelCodecPacker, compose } from '@taquito/taquito';\r\nimport Loading from '../../helper/Loading';\r\n\r\nconst Redeem = () => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const submit = async (e) => {\r\n    e.preventDefault();\r\n    const { tokenId, amount } = e.target.elements;\r\n    console.log(tokenId.value, amount.value);\r\n    const contract = await wallet.at(CONTRACT_ADDRESS);\r\n\r\n    const op = await contract.methods\r\n      .redeemTokens(parseInt(amount.value), parseInt(tokenId.value))\r\n      .send();\r\n    await op.confirmation(1);\r\n    alert('Redemption Completed!');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MenuItem onClick={onOpen}>Redeem</MenuItem>\r\n      <Modal isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>Redeem Token</ModalHeader>\r\n          <ModalBody>\r\n            <form onSubmit={submit}>\r\n              <FormControl>\r\n                <Input\r\n                  required\r\n                  type=\"number\"\r\n                  name=\"tokenId\"\r\n                  placeholder=\"Token ID\"\r\n                ></Input>\r\n              </FormControl>\r\n              <FormControl>\r\n                <Input\r\n                  required\r\n                  type=\"number\"\r\n                  name=\"amount\"\r\n                  placeholder=\"Amount\"\r\n                />\r\n              </FormControl>\r\n              <Button type=\"submit\">Redeem</Button>\r\n            </form>\r\n          </ModalBody>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default function Portfolio({ links = [] }) {\r\n  const history = useNavigate();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const { connect, disconnect, activeAccount, connected } = useWallet();\r\n\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 3000);\r\n  }, []);\r\n\r\n  const whiteListProposer = async () => {\r\n    const contract = await wallet.at(CONTRACT_ADDRESS);\r\n    const op1 = await contract.methods\r\n      .addProposers(activeAccount.address)\r\n      .send();\r\n\r\n    await op1.confirmation(1);\r\n    alert('Proposer Whitelisted!');\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      px={{ base: '5', md: '20', lg: '20' }}\r\n      display=\"flex\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n      height=\"100vh\"\r\n      bgImage={portfolioBG}\r\n      bgPosition=\"center\"\r\n      bgSize=\"cover\"\r\n      w=\"100%\"\r\n      flexWrap=\"wrap\"\r\n    >\r\n      <Flex\r\n        justifyContent={{\r\n          base: 'center',\r\n          md: 'space-between',\r\n          lg: 'space-between',\r\n        }}\r\n        height=\"47vh\"\r\n        flexDirection=\"row\"\r\n        w=\"100%\"\r\n        flexWrap=\"wrap\"\r\n      >\r\n        <Heading\r\n          className=\"mainfont\"\r\n          as=\"h2\"\r\n          fontWeight=\"semibold\"\r\n          fontSize={{ base: '4xl', md: '4xl', lg: '7xl' }}\r\n        >\r\n          Portfolio\r\n        </Heading>\r\n        <Box\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          w=\"100%\"\r\n          flexWrap=\"wrap\"\r\n          px={{ base: '3', md: '0', lg: '0' }}\r\n          // bgColor=\"pink\"\r\n          display=\"flex\"\r\n        >\r\n          <Box\r\n            display={{ base: 'flex', md: 'flex' }}\r\n            flexWrap=\"wrap\"\r\n            w={{ base: '100%', md: '32%', lg: '32%' }}\r\n          >\r\n            {loading ? (\r\n              <PageLoading />\r\n            ) : !connected ? (\r\n              <Box\r\n                padding=\"20\"\r\n                bgColor=\"#180F2Bed\"\r\n                borderRadius=\"10\"\r\n                w=\"100%\"\r\n                flexWrap=\"wrap\"\r\n                display=\"flex\"\r\n                justifyContent=\"center\"\r\n              >\r\n                <Button\r\n                  onClick={connect}\r\n                  color=\"black\"\r\n                  px=\"20\"\r\n                  borderRadius=\"20\"\r\n                  bgColor=\"white\"\r\n                >\r\n                  Connect Wallet\r\n                </Button>\r\n              </Box>\r\n            ) : (\r\n              <PortfolioComponent />\r\n            )}\r\n          </Box>\r\n        </Box>\r\n      </Flex>\r\n\r\n      {isOpen ? (\r\n        <Box pb={4} display={{ md: 'none' }}>\r\n          <Stack as={'nav'} spacing={4}>\r\n            {!connected ? (\r\n              <Button onClick={connect}>Connect Wallet</Button>\r\n            ) : (\r\n              <Menu>\r\n                <MenuButton as={Button} cursor={'pointer'} minW={0}>\r\n                  <Text\r\n                    maxW=\"300px\"\r\n                    overflow=\"hidden\"\r\n                    whiteSpace=\"nowrap\"\r\n                    textOverflow=\"ellipsis\"\r\n                  >\r\n                    {activeAccount?.address}\r\n                  </Text>\r\n                </MenuButton>\r\n                <MenuList>\r\n                  <MenuItem onClick={() => history('/mypreds')}>\r\n                    My Predictions\r\n                  </MenuItem>\r\n                  <MenuItem onClick={disconnect}>Disconnect</MenuItem>\r\n                </MenuList>\r\n              </Menu>\r\n            )}\r\n          </Stack>\r\n        </Box>\r\n      ) : null}\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst PortfolioComponent = () => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const colors = {\r\n    bg: useColorModeValue('purple.100', 'purple.700'),\r\n    text: useColorModeValue('blue', 'black'),\r\n  };\r\n  const { connect, disconnect, activeAccount, connected } = useWallet();\r\n  const [data, setData] = React.useState(null);\r\n\r\n  let ledger = [];\r\n  React.useEffect(async () => {\r\n    if (!connected) {\r\n      await connect();\r\n    }\r\n    if (activeAccount) {\r\n      console.log(activeAccount);\r\n      console.log(activeAccount.address);\r\n      const tokenContract = await Tezos.contract.at(TOKEN_ADDRESS);\r\n      const tokenStore = await tokenContract.storage();\r\n      const tokenLedger = tokenStore.ledger;\r\n      console.log(tokenLedger);\r\n      let tokens = tokenStore.all_tokens.toString().split(',').map(Number);\r\n      console.log(tokens);\r\n\r\n      for (let tokenId = tokens.length - 1; tokenId >= 0; tokenId--) {\r\n        console.log(tokenId, tokens[tokenId]);\r\n        await tokenLedger\r\n          .get([activeAccount.address, tokens[tokenId]])\r\n          .then((value) => {\r\n            if (value > 0) {\r\n              ledger.push({ id: tokens[tokenId], balance: value.toString() });\r\n            }\r\n          })\r\n          .catch((error) =>\r\n            console.log(`Error: ${tokens[tokenId]} ${activeAccount.address}`)\r\n          );\r\n        console.log(ledger);\r\n      }\r\n\r\n      setData(ledger);\r\n    }\r\n  }, [activeAccount]);\r\n  return (\r\n    data && (\r\n      <Box w=\"100%\">\r\n        <Box\r\n          bgColor=\"#180F2B\"\r\n          w={{ base: 'auto', md: '100%', lg: '100%' }}\r\n          h=\"300px\"\r\n          borderRadius=\"10\"\r\n          paddingTop=\"12\"\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Text color=\"white\" textAlign=\"center\">\r\n            Portfolio Details\r\n          </Text>\r\n          <Box>\r\n            <Text color=\"white\" textAlign=\"center\">\r\n              {' '}\r\n              <b> Portfolio </b>{' '}\r\n            </Text>\r\n\r\n            <Box display=\"flex\" flexDirection=\"column\" flexWrap=\"wrap\">\r\n              {data.map((pred, i) => {\r\n                return (\r\n                  <Box\r\n                    key={i}\r\n                    display=\"flex\"\r\n                    w=\"300px\"\r\n                    flexDirection=\"column\"\r\n                    border=\"0px solid\"\r\n                    borderRadius=\"15px\"\r\n                    padding=\"5px\"\r\n                    gap=\"7\"\r\n                  >\r\n                    <Flex\r\n                      flexDirection=\"column\"\r\n                      justifyContent=\"center\"\r\n                      // bgColor=\"red\"\r\n                      marginTop=\"30px\"\r\n                    >\r\n                      <Text color=\"white\">\r\n                        Token id &nbsp;: &nbsp; {pred.id} &nbsp;\r\n                        {/* |&nbsp; */}\r\n                      </Text>\r\n                      <Text color=\"white\">\r\n                        Balance &nbsp; : &nbsp; {pred.balance}&emsp;\r\n                      </Text>\r\n                    </Flex>\r\n                    <Center>\r\n                      <Redeem1 tokenID={pred.id} />\r\n                    </Center>\r\n                  </Box>\r\n                );\r\n              })}\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    )\r\n  );\r\n};\r\n\r\nconst Redeem1 = (tokenID) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  console.log('tokenId', tokenID.tokenID.toString());\r\n  const colors = {\r\n    bg: useColorModeValue('purple.300', 'purple.600'),\r\n    text: useColorModeValue('purple', 'white'),\r\n  };\r\n  const submit = async (e) => {\r\n    e.preventDefault();\r\n    const { amount } = e.target.elements;\r\n    console.log(tokenID.tokenID, amount.value);\r\n    const contract = await wallet.at(CONTRACT_ADDRESS);\r\n\r\n    await contract.methods.redeemTokens(amount.value, tokenID.tokenID).send();\r\n  };\r\n\r\n  return (\r\n    <Popover returnFocusOnClose={false} placement=\"right\" closeOnBlur={false}>\r\n      <PopoverTrigger>\r\n        <Button bgColor=\"#9C4FFF\" color=\"white\">\r\n          Redeem\r\n        </Button>\r\n      </PopoverTrigger>\r\n      <PopoverContent textColor={colors.text} bgColor=\"#1A1A1A\">\r\n        <PopoverHeader fontWeight=\"semibold\" color=\"white\">\r\n          Redeem Token\r\n        </PopoverHeader>\r\n        <PopoverBody gap=\"10\">\r\n          <form onSubmit={submit}>\r\n            <FormControl>\r\n              <FormLabel htmlFor=\"tokenID\" color=\"white\">\r\n                Token Id : {tokenID.tokenID.toString()}{' '}\r\n              </FormLabel>\r\n            </FormControl>\r\n            <FormControl>\r\n              <Input\r\n                required\r\n                type=\"number\"\r\n                name=\"amount\"\r\n                placeholder=\"Amount\"\r\n                _placeholder={{ color: 'white' }}\r\n                _focus={{ color: 'white' }}\r\n              />\r\n            </FormControl>\r\n            <Button type=\"submit\" marginTop=\"5\">\r\n              Redeem\r\n            </Button>\r\n          </form>\r\n        </PopoverBody>\r\n      </PopoverContent>\r\n    </Popover>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/Whitelistme-Background.b06e4304.png\";","import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport {\r\n  Box,\r\n  Flex,\r\n  HStack,\r\n  Container,\r\n  IconButton,\r\n  Button,\r\n  Image,\r\n  Heading,\r\n  Menu,\r\n  MenuButton,\r\n  MenuList,\r\n  MenuItem,\r\n  useDisclosure,\r\n  useColorModeValue,\r\n  Stack,\r\n  useColorMode,\r\n  Text,\r\n  Link,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalBody,\r\n  FormControl,\r\n  FormLabel,\r\n  Popover,\r\n  PopoverBody,\r\n  PopoverContent,\r\n  PopoverHeader,\r\n  PopoverTrigger,\r\n  Input,\r\n} from '@chakra-ui/react';\r\nimport { HamburgerIcon, CloseIcon, SunIcon, MoonIcon } from '@chakra-ui/icons';\r\nimport { useWallet } from '../../helper/WalletContext';\r\nimport {\r\n  CONTRACT_ADDRESS,\r\n  TOKEN_ADDRESS,\r\n  wallet,\r\n  Tezos,\r\n} from '../../helper/tezos';\r\nimport { TezosToolkit, MichelCodecPacker, compose } from '@taquito/taquito';\r\nimport Background from '../assets/Whitelistme-Background.png';\r\n\r\nconst Whitelist = () => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const submit = async (e) => {\r\n    e.preventDefault();\r\n    const { tokenId, amount } = e.target.elements;\r\n    console.log(tokenId.value, amount.value);\r\n    const contract = await wallet.at(CONTRACT_ADDRESS);\r\n\r\n    const op = await contract.methods\r\n      .redeemTokens(parseInt(amount.value), parseInt(tokenId.value))\r\n      .send();\r\n    await op.confirmation(1);\r\n    alert('Redemption Completed!');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container\r\n        width=\"100%\"\r\n        maxWidth=\"100%\"\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        height=\"100vh\"\r\n        alignItems=\"center\"\r\n        bgImage={Background}\r\n        bgPosition=\"center\"\r\n        bgSize=\"cover\"\r\n        px={{ base: '0', md: '20', lg: '20' }}\r\n      >\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent={'space-between'}\r\n          height=\"60vh\"\r\n          flexDirection=\"column\"\r\n          w=\"100%\"\r\n        >\r\n          <Heading\r\n            className=\"mainfont\"\r\n            as=\"h2\"\r\n            fontWeight=\"semibold\"\r\n            fontSize={{ base: '4xl', md: '4xl', lg: '7xl' }}\r\n            textAlign={{ base: 'center', md: 'left', lg: 'left' }}\r\n          >\r\n            Whitelistme\r\n          </Heading>\r\n\r\n          {/* <Flex justifyContent=\"center\">\r\n            <Box\r\n              display=\"flex\"\r\n              justifyContent=\"center\"\r\n              bgColor=\"#180F2B\"\r\n              w={{ base: '80%', md: '40%', lg: '40%' }}\r\n              flexDirection=\"column\"\r\n              padding=\"10\"\r\n              borderRadius=\"20\"\r\n            >\r\n              <Text textAlign=\"center\">Redeem</Text>\r\n              <Box>\r\n                <Text textAlign=\"center\">Redeem Token</Text>\r\n                <Box bgColor=\"#180F2B\">\r\n                  <form onSubmit={submit}>\r\n                    <FormControl>\r\n                      <Input\r\n                        required\r\n                        type=\"number\"\r\n                        name=\"tokenId\"\r\n                        placeholder=\"Token ID\"\r\n                        _placeholder={{ color: 'white' }}\r\n                      ></Input>\r\n                    </FormControl>\r\n                    <FormControl marginTop=\"5\">\r\n                      <Input\r\n                        required\r\n                        type=\"number\"\r\n                        name=\"amount\"\r\n                        placeholder=\"Amount\"\r\n                        _placeholder={{ color: 'white' }}\r\n                      />\r\n                    </FormControl>\r\n                    <Flex justifyContent=\"center\" marginTop=\"5\">\r\n                      <Button\r\n                        type=\"submit\"\r\n                        bgColor=\"white\"\r\n                        color=\"black\"\r\n                        px=\"20\"\r\n                        borderRadius=\"20\"\r\n                      >\r\n                        Redeem\r\n                      </Button>\r\n                    </Flex>\r\n                  </form>\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n          </Flex> */}\r\n        </Box>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\nexport default Whitelist;\r\n","export default __webpack_public_path__ + \"static/media/Privacy-Background.1278ebb8.png\";","import React, { useEffect, useState } from 'react';\r\nimport PageLoading from '../../helper/PageLoading';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport './Privacy.css';\r\nimport { useWallet } from '../../helper/WalletContext';\r\nimport privacyBG from '../../components/assets/Privacy-Background.png';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Text,\r\n  Flex,\r\n  Divider,\r\n  Center,\r\n  useColorModeValue,\r\n  Accordion,\r\n  AccordionItem,\r\n  AccordionButton,\r\n  AccordionPanel,\r\n  Heading,\r\n  Image,\r\n  Button,\r\n  Select,\r\n  bgImage,\r\n} from '@chakra-ui/react';\r\n\r\nexport default function Privacy() {\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 3000);\r\n  }, []);\r\n\r\n  return (\r\n    <Container\r\n      display=\"flex\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n      height=\"auto\"\r\n      bgImage={privacyBG}\r\n      bgPosition=\"center\"\r\n      bgSize=\"cover\"\r\n      w=\"100%\"\r\n      maxWidth=\"100%\"\r\n      padding={{ base: '10', md: '20', lg: '20' }}\r\n      flexWrap=\"wrap\"\r\n    >\r\n      {loading ? (\r\n        <PageLoading />\r\n      ) : (\r\n        <Flex\r\n          justifyContent={'space-between'}\r\n          height=\"auto\"\r\n          flexDirection=\"column\"\r\n          w=\"100%\"\r\n          gap=\"10\"\r\n        >\r\n          <Heading\r\n            className=\"mainfont\"\r\n            as=\"h2\"\r\n            fontWeight=\"semibold\"\r\n            fontSize={{ base: '4xl', md: '4xl', lg: '7xl' }}\r\n          >\r\n            Privacy Policys\r\n          </Heading>\r\n          <Flex\r\n            alignItems={'center'}\r\n            justifyContent=\"center\"\r\n            flexDirection=\"column\"\r\n            flexWrap=\"wrap\"\r\n          >\r\n            <p>\r\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque\r\n              velit nisi, pretium ut lacinia in, elementum id enim. Curabitur\r\n              aliquet quam id dui posuere blandit. Pellentesque in ipsum id orci\r\n              porta dapibus. Vivamus suscipit tortor eget felis porttitor\r\n              volutpat. Pellentesque in ipsum id orci porta dapibus. Quisque\r\n              velit nisi, pretium ut lacinia in, elementum id enim. Donec rutrum\r\n              congue leo eget malesuada. Lorem ipsum dolor sit amet, consectetur\r\n              adipiscing elit. Curabitur non nulla sit amet nisl tempus\r\n              convallis quis ac lectus. Vestibulum ac diam sit amet quam\r\n              vehicula elementum sed sit amet dui. Donec sollicitudin molestie\r\n              malesuada. Curabitur non nulla sit amet nisl tempus convallis quis\r\n              ac lectus. Pellentesque in ipsum id orci porta dapibus. Vivamus\r\n              suscipit tortor eget felis porttitor volutpat. Pellentesque in\r\n              ipsum id orci porta dapibus. Quisque velit nisi, pretium ut\r\n              lacinia in, elementum id enim. Donec rutrum congue leo eget\r\n              malesuada. Pellentesque in ipsum id orci porta dapibus. Vivamus\r\n              suscipit tortor eget felis porttitor volutpat. Pellentesque in\r\n              ipsum id orci porta dapibus. Quisque velit nisi, pretium ut\r\n              lacinia in, elementum id enim. Donec rutrum congue leo eget\r\n              malesuada. Lorem ipsum dolor sit amet, consectetur\r\n            </p>\r\n            <br></br>\r\n\r\n            <p>\r\n              adipiscing elit. Curabitur non nulla sit amet nisl tempus\r\n              convallis quis ac lectus. Vestibulum ac diam sit amet quam\r\n              vehicula elementum sed sit amet dui. Donec sollicitudin molestie\r\n              malesuada. Curabitur non nulla sit amet nisl tempus convallis quis\r\n              ac lectus. Pellentesque in ipsum id orci porta dapibus. Vivamus\r\n              suscipit tortor eget felis porttitor volutpat. Pellentesque in\r\n              ipsum id orci porta dapibus. Quisque velit nisi, pretium ut\r\n              lacinia in, elementum id enim. Donec rutrum congue leo eget\r\n              malesuada. Lorem ipsum dolor sit amet. Pellentesque in ipsum id\r\n              orci porta dapibus. Vivamus suscipit tortor eget felis porttitor\r\n              volutpat. Pellentesque in ipsum id orci porta dapibus. Quisque\r\n              velit nisi, pretium ut lacinia in, elementum id enim. Donec rutrum\r\n              congue leo eget malesuada. Lorem ipsum dolor sit amet, consectetur\r\n              adipiscing elit. Curabitur non nulla sit amet nisl tempus\r\n              convallis quis ac lectus. Vestibulum ac diam sit amet quam\r\n              vehicula elementum sed sit amet dui. Donec sollicitudin molestie\r\n              malesuada. Curabitur non nulla sit amet nisl tempus convallis quis\r\n              ac lectus. din molestie malesuada. Curabitur non nulla sit amet\r\n              nisl tempus convallis quis ac lectus.\r\n            </p>\r\n          </Flex>\r\n        </Flex>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Contact-Background.057434d5.png\";","export default __webpack_public_path__ + \"static/media/Twitter.18b6f403.svg\";","export default __webpack_public_path__ + \"static/media/Telegram.08b2de8d.svg\";","import React, { useEffect, useState } from 'react';\r\n// import { useForm } from 'react-hook-form';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport './Contact.css';\r\nimport { useWallet } from '../../helper/WalletContext';\r\nimport contactBG from '../../components/assets/Contact-Background.png';\r\nimport PageLoading from '../../helper/PageLoading';\r\nimport twitter from '../../components/assets/Twitter.svg';\r\nimport telegram from '../../components/assets/Telegram.svg';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Text,\r\n  Flex,\r\n  Divider,\r\n  Center,\r\n  Link,\r\n  useColorModeValue,\r\n  Accordion,\r\n  AccordionItem,\r\n  AccordionButton,\r\n  AccordionPanel,\r\n  Heading,\r\n  Image,\r\n  Button,\r\n  Select,\r\n  bgImage,\r\n  FormControl,\r\n  FormLabel,\r\n  FormErrorMessage,\r\n  FormHelperText,\r\n  Input,\r\n  Textarea,\r\n  Stack,\r\n  Radio,\r\n} from '@chakra-ui/react';\r\n\r\nconst Contact = () => {\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 3000);\r\n  }, []);\r\n\r\n  return (\r\n    <Container\r\n      display=\"flex\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n      height=\"100vh\"\r\n      bgImage={contactBG}\r\n      bgPosition=\"center\"\r\n      bgSize=\"cover\"\r\n      w=\"100%\"\r\n      maxWidth=\"100%\"\r\n      px={{ base: '10', md: '20', lg: '20' }}\r\n    >\r\n      {loading ? (\r\n        <PageLoading />\r\n      ) : (\r\n        <Flex\r\n          justifyContent={'space-between'}\r\n          height=\"30vh\"\r\n          flexDirection=\"column\"\r\n          w=\"100%\"\r\n        >\r\n          <Heading\r\n            className=\"mainfont\"\r\n            as=\"h2\"\r\n            fontWeight=\"semibold\"\r\n            fontSize={{ base: '4xl', md: '4xl', lg: '7xl' }}\r\n            textAlign={{ base: 'center', md: 'left', lg: 'left' }}\r\n          >\r\n            Talk To Us\r\n          </Heading>\r\n          <Flex justifyContent=\"center\" flexDirection=\"row\" alignItems=\"center\">\r\n            <Link href=\"https://twitter.com/DaoPredictor\">\r\n              <Image height=\"70px\" px=\"6\" src={twitter} />\r\n            </Link>\r\n            <Link href=\"https://t.me/predictor_tez\">\r\n              <Image height=\"70px\" px=\"6\" src={telegram} />\r\n            </Link>\r\n          </Flex>\r\n        </Flex>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n\r\nconst Contactform = () => {\r\n  <FormControl bgColor=\"#180F2B\" w=\"50%\" padding=\"10\" borderRadius=\"10\">\r\n    <FormControl display=\"flex\" marginBottom=\"5\">\r\n      <Box w=\"50%\">\r\n        <FormLabel htmlFor=\"name\" color=\"#CEB0F5\">\r\n          First Name\r\n        </FormLabel>\r\n        <Input\r\n          id=\"name\"\r\n          placeholder=\"First Name\"\r\n          _placeholder={{ color: '#757575' }}\r\n        />\r\n      </Box>\r\n      <Box w=\"50%\">\r\n        <FormLabel htmlFor=\"name\" color=\"#CEB0F5\">\r\n          Last Name\r\n        </FormLabel>\r\n        <Input\r\n          id=\"name\"\r\n          placeholder=\"First Name\"\r\n          _placeholder={{ color: '#757575' }}\r\n        />\r\n      </Box>\r\n    </FormControl>\r\n\r\n    <FormLabel htmlFor=\"email\" marginBottom=\"5\" color=\"#CEB0F5\">\r\n      Email\r\n    </FormLabel>\r\n    <Input\r\n      id=\"email\"\r\n      type=\"email\"\r\n      placeholder=\"Example@email.com\"\r\n      _placeholder={{ color: '#757575' }}\r\n      marginBottom=\"5\"\r\n    />\r\n    <FormLabel htmlFor=\"name\" color=\"#CEB0F5\">\r\n      How can we help you?\r\n    </FormLabel>\r\n    <Textarea\r\n      marginBottom=\"5\"\r\n      placeholder=\"Here is a sample placeholder\"\r\n      _placeholder={{ color: '#757575' }}\r\n    />\r\n    <Stack marginBottom=\"5\">\r\n      <Radio size=\"sm\" name=\"1\" colorScheme=\"red\">\r\n        Send me product updates and helpful resources about Rise.\r\n      </Radio>\r\n      <Radio size=\"sm\" name=\"1\" colorScheme=\"red\">\r\n        I consent to the use of my personal information as specified in the Rise\r\n        privacy policy, including the cookie policy.\r\n      </Radio>\r\n    </Stack>\r\n    <Center marginTop=\"10\">\r\n      <Button\r\n        marginLeft=\"auto\"\r\n        marginRight=\"auto\"\r\n        type=\"submit\"\r\n        bgColor=\"#9C4FFF\"\r\n        px=\"40\"\r\n      >\r\n        Submit\r\n      </Button>\r\n    </Center>\r\n  </FormControl>;\r\n};\r\n","export default __webpack_public_path__ + \"static/media/FAQ-Background.f15ae04e.png\";","import React, { useEffect, useState } from 'react';\r\nimport PageLoading from '../../helper/PageLoading';\r\n// import { useForm } from 'react-hook-form';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport './FAQ.css';\r\nimport { useWallet } from '../../helper/WalletContext';\r\nimport privacyBG from '../../components/assets/FAQ-Background.png';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Text,\r\n  Flex,\r\n  Divider,\r\n  Center,\r\n  useColorModeValue,\r\n  Heading,\r\n  Image,\r\n  Button,\r\n  Select,\r\n  bgImage,\r\n  FormErrorMessage,\r\n  FormLabel,\r\n  FormControl,\r\n  Input,\r\n  Accordion,\r\n  AccordionItem,\r\n  AccordionButton,\r\n  AccordionPanel,\r\n  AccordionIcon,\r\n} from '@chakra-ui/react';\r\n\r\nconst FAQ = () => {\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 3000);\r\n  }, []);\r\n\r\n  return (\r\n    <Container\r\n      display=\"flex\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n      height=\"auto\"\r\n      bgImage={privacyBG}\r\n      bgPosition=\"center\"\r\n      bgSize=\"cover\"\r\n      w=\"100%\"\r\n      maxWidth=\"100%\"\r\n      px={{ base: '10', md: '20', lg: '20' }}\r\n      py=\"40\"\r\n    >\r\n      {loading ? (\r\n        <PageLoading />\r\n      ) : (\r\n        <Flex\r\n          justifyContent={'space-between'}\r\n          height=\"auto\"\r\n          flexDirection=\"column\"\r\n          w=\"100%\"\r\n          flexWrap=\"nowrap\"\r\n          gap=\"10\"\r\n        >\r\n          <Heading\r\n            className=\"mainfont\"\r\n            as=\"h2\"\r\n            fontWeight=\"semibold\"\r\n            fontSize={{ base: '4xl', md: '4xl', lg: '7xl' }}\r\n            textAlign=\"left\"\r\n          >\r\n            FAQs\r\n          </Heading>\r\n          <Flex\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n            flexDirection=\"column\"\r\n            display=\"flex\"\r\n            w=\"100%\"\r\n            gap=\"10\"\r\n          >\r\n            <Box w=\"100%\">\r\n              <Heading\r\n                className=\"mainfont\"\r\n                as=\"h3\"\r\n                fontWeight=\"semibold\"\r\n                fontSize={{ base: '4xl', md: '4xl', lg: '7xl' }}\r\n                textAlign=\"center\"\r\n              >\r\n                Services\r\n              </Heading>\r\n              <Accordion w=\"100%\" defaultIndex={[0]} allowMultiple>\r\n                <AccordionItem>\r\n                  <h2>\r\n                    <AccordionButton>\r\n                      <Box flex=\"1\" textAlign=\"left\">\r\n                        What is Predictor?\r\n                      </Box>\r\n                      <AccordionIcon />\r\n                    </AccordionButton>\r\n                  </h2>\r\n                  <AccordionPanel pb={4}>\r\n                    It is a decentralized prediction market platform that people\r\n                    can use to create predictions and trade FA2 tokens. The\r\n                    Predictor is intended for the dissemination of information\r\n                    and education. The Site displays live markets deployed on\r\n                    the Tezos blockchain.\r\n                  </AccordionPanel>\r\n                </AccordionItem>\r\n\r\n                <AccordionItem>\r\n                  <h2>\r\n                    <AccordionButton>\r\n                      <Box flex=\"1\" textAlign=\"left\">\r\n                        What is FA2 Tokens?\r\n                      </Box>\r\n                      <AccordionIcon />\r\n                    </AccordionButton>\r\n                  </h2>\r\n                  <AccordionPanel pb={4}>\r\n                    Tezos has its own token standard, known as the Tezos Coin\r\n                    Standard (or TCS). The TCS defines how tokens can be\r\n                    transferred between accounts and how they can interact with\r\n                    smart contracts. To simplify, FA2 Token is a token standard\r\n                    on Tezos.\r\n                  </AccordionPanel>\r\n                </AccordionItem>\r\n                <AccordionItem>\r\n                  <h2>\r\n                    <AccordionButton>\r\n                      <Box flex=\"1\" textAlign=\"left\">\r\n                        What is Tezos Blockchain?\r\n                      </Box>\r\n                      <AccordionIcon />\r\n                    </AccordionButton>\r\n                  </h2>\r\n                  <AccordionPanel pb={4}>\r\n                    Tezos is a public blockchain that supports smart contracts\r\n                    and decentralized applications.\r\n                  </AccordionPanel>\r\n                </AccordionItem>\r\n              </Accordion>\r\n            </Box>\r\n\r\n            <Box w=\"100%\">\r\n              <Accordion w=\"100%\" defaultIndex={[0]} allowMultiple>\r\n                <AccordionItem>\r\n                  <h2>\r\n                    <AccordionButton>\r\n                      <Box flex=\"1\" textAlign=\"left\">\r\n                        How does the Predictor work?\r\n                      </Box>\r\n                      <AccordionIcon />\r\n                    </AccordionButton>\r\n                  </h2>\r\n                  <AccordionPanel pb={4}>\r\n                    The Predictor does not host any market but only to provide\r\n                    the interface to view available markets. The Predictor is\r\n                    intended for the dissemination of information and education.\r\n                    The Site displays live markets deployed on the Tezos\r\n                    blockchain.\r\n                  </AccordionPanel>\r\n                </AccordionItem>\r\n\r\n                <AccordionItem>\r\n                  <h2>\r\n                    <AccordionButton>\r\n                      <Box flex=\"1\" textAlign=\"left\">\r\n                        What are information market platforms?\r\n                      </Box>\r\n                      <AccordionIcon />\r\n                    </AccordionButton>\r\n                  </h2>\r\n                  <AccordionPanel pb={4}>\r\n                    Information market platforms are online marketplaces that\r\n                    allow users to buy and sell information products.\r\n                    Information products can include anything from e-books and\r\n                    courses to software and templates.\r\n                  </AccordionPanel>\r\n                </AccordionItem>\r\n\r\n                <AccordionItem>\r\n                  <h2>\r\n                    <AccordionButton>\r\n                      <Box flex=\"1\" textAlign=\"left\">\r\n                        What are some tips viewing information on market\r\n                        platforms?\r\n                      </Box>\r\n                      <AccordionIcon />\r\n                    </AccordionButton>\r\n                  </h2>\r\n                  <AccordionPanel pb={4}>\r\n                    Here are some tips for viewing information on market\r\n                    platforms: <br></br>-Check the reviews of the platform\r\n                    before purchasing anything. <br></br>-Make sure the platform\r\n                    you choose has a good reputation. <br></br>-Only buy from\r\n                    reputable sellers. <br></br>-Be careful of scams.\r\n                  </AccordionPanel>\r\n                </AccordionItem>\r\n\r\n                <AccordionItem>\r\n                  <h2>\r\n                    <AccordionButton>\r\n                      <Box flex=\"1\" textAlign=\"left\">\r\n                        Are there any other considerations I should keep in\r\n                        mind?\r\n                      </Box>\r\n                      <AccordionIcon />\r\n                    </AccordionButton>\r\n                  </h2>\r\n                  <AccordionPanel pb={4}>\r\n                    Users are responsible for ensuring that they comply with all\r\n                    applicable laws and should do their own research before\r\n                    creating any smart contracts. <br></br>This FAQ is meant to\r\n                    provide general information about information market\r\n                    platforms. If you have specific questions about a particular\r\n                    platform, please contact the platform directly.\r\n                  </AccordionPanel>\r\n                </AccordionItem>\r\n              </Accordion>\r\n            </Box>\r\n          </Flex>\r\n        </Flex>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FAQ;\r\n","export default __webpack_public_path__ + \"static/media/Blog.e9eddaa0.png\";","export default __webpack_public_path__ + \"static/media/BlogImage.1ed0a0f7.png\";","import React, { useEffect, useState } from 'react';\r\nimport { Suspense } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport './Blogs.css';\r\nimport { useWallet } from '../../helper/WalletContext';\r\nimport Background from '../../components/assets/Blog.png';\r\nimport ImageBlog from '../../components/assets/BlogImage.png';\r\nimport PageLoading from '../../helper/PageLoading';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Text,\r\n  Flex,\r\n  Divider,\r\n  Center,\r\n  useColorModeValue,\r\n  Accordion,\r\n  AccordionItem,\r\n  AccordionButton,\r\n  AccordionPanel,\r\n  Heading,\r\n  Image,\r\n  Button,\r\n  Select,\r\n  bgImage,\r\n  Link,\r\n} from '@chakra-ui/react';\r\n\r\nconst How = () => {\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 3000);\r\n  }, []);\r\n\r\n  return (\r\n    <Container\r\n      display=\"flex\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n      height=\"auto\"\r\n      bgImage={Background}\r\n      bgPosition=\"center\"\r\n      bgSize=\"cover\"\r\n      w=\"100%\"\r\n      maxWidth=\"100%\"\r\n      px={{ base: '5', md: '20', lg: '20' }}\r\n    >\r\n      {loading ? (\r\n        <PageLoading />\r\n      ) : (\r\n        <Flex\r\n          justifyContent={'center'}\r\n          height=\"auto\"\r\n          flexDirection=\"column\"\r\n          alignItems=\"center\"\r\n          display=\"flex\"\r\n          w=\"100%\"\r\n          gap=\"10\"\r\n          py=\"40\"\r\n        >\r\n          <Box\r\n            display=\"flex\"\r\n            alignItems={'left'}\r\n            justifyContent=\"center\"\r\n            flexDirection=\"row\"\r\n            bgColor=\"#180F2B\"\r\n            borderRadius=\"30\"\r\n            w={{ base: '100%', md: '40%', lg: '40%' }}\r\n            height={{ base: '35vh', md: '40vh', lg: '40vh' }}\r\n            className=\"main\"\r\n          >\r\n            <Box\r\n              className=\"title\"\r\n              w=\"48%\"\r\n              display=\"flex\"\r\n              gap=\"5\"\r\n              flexDirection=\"column\"\r\n            >\r\n              <Box>\r\n                <Link\r\n                  className=\"mainfont\"\r\n                  fontWeight=\"semibold\"\r\n                  fontSize=\"3xl\"\r\n                  textAlign=\"left\"\r\n                  lineHeight=\"1\"\r\n                  href=\"https://medium.com/@karthi1908/predictor-c90398056061\"\r\n                  zIndex=\"999\"\r\n                  _focus={{ outline: 'none' }}\r\n                >\r\n                  Getting Started with Predictor\r\n                </Link>\r\n              </Box>\r\n\r\n              <Box display=\"flex\" gap=\"2\" flexDirection=\"column\">\r\n                <Text\r\n                  className=\"mainfont\"\r\n                  as=\"h2\"\r\n                  fontWeight=\"semibold\"\r\n                  size=\"md\"\r\n                  textAlign=\"left\"\r\n                >\r\n                  Predict<span className=\"or\">or</span>\r\n                </Text>\r\n              </Box>\r\n            </Box>\r\n            <Box\r\n              gap=\"4\"\r\n              w=\"50%\"\r\n              display=\"flex\"\r\n              alignItems=\"start\"\r\n              flexDirection=\"column\"\r\n              justifyContent=\"center\"\r\n            ></Box>\r\n            <Box\r\n              w=\"50%\"\r\n              bgImage={ImageBlog}\r\n              bgPosition=\"center\"\r\n              bgSize=\"cover\"\r\n              className=\"imageblog\"\r\n              zIndex=\"1\"\r\n            ></Box>\r\n          </Box>\r\n\r\n          <Box\r\n            display=\"flex\"\r\n            alignItems={'left'}\r\n            justifyContent=\"center\"\r\n            flexDirection=\"row\"\r\n            bgColor=\"#180F2B\"\r\n            borderRadius=\"30\"\r\n            w={{ base: '100%', md: '40%', lg: '40%' }}\r\n            height={{ base: '35vh', md: '40vh', lg: '40vh' }}\r\n            className=\"main\"\r\n          >\r\n            <Box\r\n              className=\"title\"\r\n              w=\"48%\"\r\n              display=\"flex\"\r\n              gap=\"5\"\r\n              flexDirection=\"column\"\r\n            >\r\n              <Box>\r\n                <Link\r\n                  className=\"mainfont\"\r\n                  fontWeight=\"semibold\"\r\n                  fontSize=\"3xl\"\r\n                  textAlign=\"left\"\r\n                  lineHeight=\"1\"\r\n                  href=\"https://medium.com/coinmonks/predictor-da7efb0163ca\"\r\n                  _focus={{ outline: 'none' }}\r\n                >\r\n                  The Decentralised Prediction Markets on Tezos\r\n                </Link>\r\n              </Box>\r\n\r\n              <Box display=\"flex\" gap=\"2\" flexDirection=\"column\">\r\n                <Text\r\n                  className=\"mainfont\"\r\n                  as=\"h2\"\r\n                  fontWeight=\"semibold\"\r\n                  size=\"md\"\r\n                  textAlign=\"left\"\r\n                >\r\n                  Predict<span className=\"or\">or</span>\r\n                </Text>\r\n              </Box>\r\n            </Box>\r\n            <Box\r\n              gap=\"4\"\r\n              w=\"50%\"\r\n              display=\"flex\"\r\n              alignItems=\"start\"\r\n              flexDirection=\"column\"\r\n              justifyContent=\"center\"\r\n            ></Box>\r\n            <Box\r\n              w=\"50%\"\r\n              bgImage={ImageBlog}\r\n              bgPosition=\"center\"\r\n              bgSize=\"cover\"\r\n              className=\"imageblog\"\r\n              zIndex=\"1\"\r\n            ></Box>\r\n          </Box>\r\n\r\n          <Box\r\n            display=\"flex\"\r\n            alignItems={'left'}\r\n            justifyContent=\"center\"\r\n            flexDirection=\"row\"\r\n            bgColor=\"#180F2B\"\r\n            borderRadius=\"30\"\r\n            w={{ base: '100%', md: '40%', lg: '40%' }}\r\n            height={{ base: '35vh', md: '40vh', lg: '40vh' }}\r\n            className=\"main\"\r\n          >\r\n            <Box\r\n              className=\"title\"\r\n              w=\"48%\"\r\n              display=\"flex\"\r\n              gap=\"5\"\r\n              flexDirection=\"column\"\r\n            >\r\n              <Box>\r\n                <Link\r\n                  className=\"mainfont\"\r\n                  fontWeight=\"semibold\"\r\n                  fontSize=\"3xl\"\r\n                  textAlign=\"left\"\r\n                  lineHeight=\"1\"\r\n                  href=\"https://medium.com/@karthi1908/predictor-d01e6c67de0e\"\r\n                  _focus={{ outline: 'none' }}\r\n                >\r\n                  How to buy / trade predictions on Predictor?\r\n                </Link>\r\n              </Box>\r\n\r\n              <Box display=\"flex\" gap=\"2\" flexDirection=\"column\">\r\n                <Text\r\n                  className=\"mainfont\"\r\n                  as=\"h2\"\r\n                  fontWeight=\"semibold\"\r\n                  size=\"md\"\r\n                  textAlign=\"left\"\r\n                >\r\n                  Predict<span className=\"or\">or</span>\r\n                </Text>\r\n              </Box>\r\n            </Box>\r\n            <Box\r\n              gap=\"4\"\r\n              w=\"50%\"\r\n              display=\"flex\"\r\n              alignItems=\"start\"\r\n              flexDirection=\"column\"\r\n              justifyContent=\"center\"\r\n            ></Box>\r\n            <Box\r\n              w=\"50%\"\r\n              bgImage={ImageBlog}\r\n              bgPosition=\"center\"\r\n              bgSize=\"cover\"\r\n              className=\"imageblog\"\r\n              zIndex=\"1\"\r\n            ></Box>\r\n          </Box>\r\n        </Flex>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default How;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Suspense } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport './Blogs.css';\r\nimport { useWallet } from '../../helper/WalletContext';\r\nimport Background from '../../components/assets/Blog.png';\r\nimport ImageBlog from '../../components/assets/BlogImage.png';\r\nimport PageLoading from '../../helper/PageLoading';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Text,\r\n  Flex,\r\n  Divider,\r\n  Center,\r\n  useColorModeValue,\r\n  Accordion,\r\n  AccordionItem,\r\n  AccordionButton,\r\n  AccordionPanel,\r\n  Heading,\r\n  Image,\r\n  Button,\r\n  Select,\r\n  bgImage,\r\n} from '@chakra-ui/react';\r\n\r\nconst BlogContent = () => {\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 3000);\r\n  }, []);\r\n\r\n  return (\r\n    <Container\r\n      display=\"flex\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n      height=\"auto\"\r\n      bgImage={Background}\r\n      bgPosition=\"center\"\r\n      bgSize=\"cover\"\r\n      w=\"100%\"\r\n      maxWidth=\"100%\"\r\n      px={{ base: '5', md: '20', lg: '20' }}\r\n      py=\"50\"\r\n    >\r\n      {loading ? (\r\n        <PageLoading />\r\n      ) : (\r\n        <Box\r\n          w=\"100%\"\r\n          display=\"flex\"\r\n          justifyContent=\"center\"\r\n          flexDirection=\"column\"\r\n          alignItems=\"center\"\r\n          gap=\"20\"\r\n        >\r\n          <Box\r\n            height=\"30vh\"\r\n            bgColor=\"#180F2B\"\r\n            w={{ base: '100%', md: '40%', lg: '40%' }}\r\n            display=\"flex\"\r\n            className=\"main\"\r\n            borderRadius=\"30\"\r\n          >\r\n            <Box\r\n              className=\"title\"\r\n              w=\"48%\"\r\n              display=\"flex\"\r\n              gap=\"5\"\r\n              flexDirection=\"column\"\r\n            >\r\n              <Box>\r\n                <Text\r\n                  className=\"mainfont\"\r\n                  fontWeight=\"semibold\"\r\n                  fontSize=\"3xl\"\r\n                  textAlign=\"left\"\r\n                  lineHeight=\"1\"\r\n                >\r\n                  Why Prediction Markets are Good for Society\r\n                </Text>\r\n              </Box>\r\n\r\n              <Box display=\"flex\" gap=\"2\" flexDirection=\"column\">\r\n                <Text\r\n                  className=\"mainfont\"\r\n                  as=\"h2\"\r\n                  fontWeight=\"semibold\"\r\n                  size=\"md\"\r\n                  textAlign=\"left\"\r\n                >\r\n                  Predict<span className=\"or\">or</span>\r\n                </Text>\r\n\r\n                <Text fontSize=\"xs\">By: Lorem Ipsum</Text>\r\n              </Box>\r\n            </Box>\r\n            <Box\r\n              gap=\"4\"\r\n              w=\"50%\"\r\n              display=\"flex\"\r\n              alignItems=\"start\"\r\n              flexDirection=\"column\"\r\n              justifyContent=\"center\"\r\n              height=\"30vh\"\r\n            ></Box>\r\n\r\n            <Box\r\n              w=\"50%\"\r\n              bgImage={ImageBlog}\r\n              bgPosition=\"center\"\r\n              bgSize=\"cover\"\r\n              className=\"imageblog\"\r\n              height=\"30vh\"\r\n            ></Box>\r\n          </Box>\r\n\r\n          <Box px={{ base: '10', md: '100', lg: '100' }}>\r\n            <Text>\r\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n              eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut\r\n              enim ad minim veniam, quis nostrud exercitation ullamco laboris\r\n              nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in\r\n              reprehenderit in voluptate velit esse cillum dolore eu fugiat\r\n              nulla pariatur. Excepteur sint occaecat cupidatat non proident,\r\n              sunt in culpa qui officia deserunt mollit anim id est laborum.\r\n            </Text>\r\n            <Text>\r\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n              eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut\r\n              enim ad minim veniam, quis nostrud exercitation ullamco laboris\r\n              nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in\r\n              reprehenderit in voluptate velit esse cillum dolore eu fugiat\r\n              nulla pariatur. Excepteur sint occaecat cupidatat non proident,\r\n              sunt in culpa qui officia deserunt mollit anim id est.\r\n            </Text>\r\n            <Text>\r\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n              eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut\r\n              enim ad minim veniam, quis nostrud exercitation ullamco laboris\r\n              nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in\r\n              reprehenderit in voluptate velit esse cillum dolore eu fugiat\r\n              nulla pariatur. Excepteur sint occaecat cupidatat non proident,\r\n              sunt in culpa qui officia deserunt mollit anim id est.\r\n            </Text>\r\n            <Text>\r\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n              eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut\r\n              enim ad minim veniam, quis nostrud exercitation ullamco laboris\r\n              nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in\r\n              reprehenderit in voluptate velit esse cillum dolore eu fugiat\r\n              nulla pariatur. Excepteur sint occaecat cupidatat non proident,\r\n              sunt in culpa qui officia deserunt mollit anim id est.\r\n            </Text>\r\n          </Box>\r\n\r\n          <Box\r\n            w=\"100%\"\r\n            display=\"flex\"\r\n            gap=\"7\"\r\n            flexDirection={{ base: 'column', md: 'row', lg: 'row' }}\r\n          >\r\n            <Box\r\n              height=\"30vh\"\r\n              bgColor=\"#180F2B\"\r\n              w={{ base: '100%', md: '33%', lg: '33%' }}\r\n              display=\"flex\"\r\n              className=\"main\"\r\n              borderRadius=\"30\"\r\n            >\r\n              <Box\r\n                className=\"title\"\r\n                w=\"48%\"\r\n                display=\"flex\"\r\n                gap=\"5\"\r\n                flexDirection=\"column\"\r\n              >\r\n                <Box>\r\n                  <Text\r\n                    className=\"mainfont\"\r\n                    fontWeight=\"semibold\"\r\n                    fontSize=\"2xl\"\r\n                    textAlign=\"left\"\r\n                    lineHeight=\"1\"\r\n                  >\r\n                    Why Prediction Markets are Good for Society\r\n                  </Text>\r\n                </Box>\r\n\r\n                <Box display=\"flex\" gap=\"2\" flexDirection=\"column\">\r\n                  <Text\r\n                    className=\"mainfont\"\r\n                    as=\"h2\"\r\n                    fontWeight=\"semibold\"\r\n                    size=\"md\"\r\n                    textAlign=\"left\"\r\n                  >\r\n                    Predict<span className=\"or\">or</span>\r\n                  </Text>\r\n\r\n                  <Text fontSize=\"xs\">By: Lorem Ipsum</Text>\r\n                </Box>\r\n              </Box>\r\n              <Box\r\n                gap=\"4\"\r\n                w=\"50%\"\r\n                display=\"flex\"\r\n                alignItems=\"start\"\r\n                flexDirection=\"column\"\r\n                justifyContent=\"center\"\r\n                height=\"30vh\"\r\n              ></Box>\r\n\r\n              <Box\r\n                w=\"50%\"\r\n                bgImage={ImageBlog}\r\n                bgPosition=\"center\"\r\n                bgSize=\"cover\"\r\n                className=\"imageblog\"\r\n                height=\"30vh\"\r\n              ></Box>\r\n            </Box>\r\n\r\n            <Box\r\n              height=\"30vh\"\r\n              bgColor=\"#180F2B\"\r\n              w={{ base: '100%', md: '33%', lg: '33%' }}\r\n              display=\"flex\"\r\n              className=\"main\"\r\n              borderRadius=\"30\"\r\n            >\r\n              <Box\r\n                className=\"title\"\r\n                w=\"48%\"\r\n                display=\"flex\"\r\n                gap=\"5\"\r\n                flexDirection=\"column\"\r\n              >\r\n                <Box>\r\n                  <Text\r\n                    className=\"mainfont\"\r\n                    fontWeight=\"semibold\"\r\n                    fontSize=\"2xl\"\r\n                    textAlign=\"left\"\r\n                    lineHeight=\"1\"\r\n                  >\r\n                    Why Prediction Markets are Good for Society\r\n                  </Text>\r\n                </Box>\r\n\r\n                <Box display=\"flex\" gap=\"2\" flexDirection=\"column\">\r\n                  <Text\r\n                    className=\"mainfont\"\r\n                    as=\"h2\"\r\n                    fontWeight=\"semibold\"\r\n                    size=\"md\"\r\n                    textAlign=\"left\"\r\n                  >\r\n                    Predict<span className=\"or\">or</span>\r\n                  </Text>\r\n\r\n                  <Text fontSize=\"xs\">By: Lorem Ipsum</Text>\r\n                </Box>\r\n              </Box>\r\n              <Box\r\n                gap=\"4\"\r\n                w=\"50%\"\r\n                display=\"flex\"\r\n                alignItems=\"start\"\r\n                flexDirection=\"column\"\r\n                justifyContent=\"center\"\r\n                height=\"30vh\"\r\n              ></Box>\r\n\r\n              <Box\r\n                w=\"50%\"\r\n                bgImage={ImageBlog}\r\n                bgPosition=\"center\"\r\n                bgSize=\"cover\"\r\n                className=\"imageblog\"\r\n                height=\"30vh\"\r\n              ></Box>\r\n            </Box>\r\n\r\n            <Box\r\n              height=\"30vh\"\r\n              bgColor=\"#180F2B\"\r\n              w={{ base: '100%', md: '33%', lg: '33%' }}\r\n              display=\"flex\"\r\n              className=\"main\"\r\n              borderRadius=\"30\"\r\n            >\r\n              <Box\r\n                className=\"title\"\r\n                w=\"48%\"\r\n                display=\"flex\"\r\n                gap=\"5\"\r\n                flexDirection=\"column\"\r\n              >\r\n                <Box>\r\n                  <Text\r\n                    className=\"mainfont\"\r\n                    fontWeight=\"semibold\"\r\n                    fontSize=\"2xl\"\r\n                    textAlign=\"left\"\r\n                    lineHeight=\"1\"\r\n                  >\r\n                    Why Prediction Markets are Good for Society\r\n                  </Text>\r\n                </Box>\r\n\r\n                <Box display=\"flex\" gap=\"2\" flexDirection=\"column\">\r\n                  <Text\r\n                    className=\"mainfont\"\r\n                    as=\"h2\"\r\n                    fontWeight=\"semibold\"\r\n                    size=\"md\"\r\n                    textAlign=\"left\"\r\n                  >\r\n                    Predict<span className=\"or\">or</span>\r\n                  </Text>\r\n\r\n                  <Text fontSize=\"xs\">By: Lorem Ipsum</Text>\r\n                </Box>\r\n              </Box>\r\n              <Box\r\n                gap=\"4\"\r\n                w=\"50%\"\r\n                display=\"flex\"\r\n                alignItems=\"start\"\r\n                flexDirection=\"column\"\r\n                justifyContent=\"center\"\r\n                height=\"30vh\"\r\n              ></Box>\r\n\r\n              <Box\r\n                w=\"50%\"\r\n                bgImage={ImageBlog}\r\n                bgPosition=\"center\"\r\n                bgSize=\"cover\"\r\n                className=\"imageblog\"\r\n                height=\"30vh\"\r\n              ></Box>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default BlogContent;\r\n","export default __webpack_public_path__ + \"static/media/TermsUse.5b36311d.png\";","import React, { useEffect, useState } from 'react';\r\nimport { Suspense } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport './Terms.css';\r\nimport { useWallet } from '../../helper/WalletContext';\r\nimport Background from '../../components/assets/TermsUse.png';\r\nimport PageLoading from '../../helper/PageLoading';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Text,\r\n  Flex,\r\n  Divider,\r\n  Center,\r\n  useColorModeValue,\r\n  Accordion,\r\n  AccordionItem,\r\n  AccordionButton,\r\n  AccordionPanel,\r\n  Heading,\r\n  Image,\r\n  Button,\r\n  Select,\r\n  bgImage,\r\n} from '@chakra-ui/react';\r\n\r\nconst Terms = () => {\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 3000);\r\n  }, []);\r\n\r\n  return (\r\n    <Container\r\n      display=\"flex\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n      height=\"auto\"\r\n      bgImage={Background}\r\n      bgPosition=\"center\"\r\n      bgSize=\"cover\"\r\n      w=\"100%\"\r\n      maxWidth=\"100%\"\r\n      py={{ base: '10', md: '120', lg: '120' }}\r\n      px={{ base: '10', md: '20', lg: '20' }}\r\n    >\r\n      {loading ? (\r\n        <PageLoading />\r\n      ) : (\r\n        <Flex\r\n          justifyContent={'space-between'}\r\n          height=\"auto\"\r\n          flexDirection=\"column\"\r\n          w=\"100%\"\r\n          gap=\"10\"\r\n        >\r\n          <Heading\r\n            className=\"mainfont\"\r\n            as=\"h2\"\r\n            fontWeight=\"semibold\"\r\n            fontSize={{ base: '4xl', md: '4xl', lg: '7xl' }}\r\n          >\r\n            Terms of Use\r\n          </Heading>\r\n          <Flex\r\n            alignItems={'center'}\r\n            justifyContent=\"center\"\r\n            flexDirection=\"column\"\r\n          >\r\n            <p>\r\n              Predictor is a decentralized prediction market platform that\r\n              people can use to create predictions and trade FA2 tokens which is\r\n              made up of free, public, open-source or source-available software\r\n              including a set of smart contracts that are deployed on the Tezos\r\n              Blockchain. Your use of the Predictor platform involves various\r\n              risks, including, but not limited to, losses while digital assets\r\n              are being supplied to the Predictor protocol and losses due to the\r\n              fluctuation of prices of tokens in a trading pair or liquidity\r\n              pool. Before using the Predictor , you should review the relevant\r\n              documentation to make sure you understand how the Predictor works.\r\n              Additionally, just as you can access email protocols such as SMTP\r\n              through multiple email clients, you can access the Predictor\r\n              through various web or mobile interfaces. You are responsible for\r\n              doing your own diligence on those interfaces to understand the\r\n              fees and risks they present.\r\n            </p>\r\n            <br></br>\r\n\r\n            <p>\r\n              AS DESCRIBED IN THE PREDICTOR LICENSES, THE PREDICTOR IS PROVIDED\r\n              \"AS IS\", AT YOUR OWN RISK, AND WITHOUT WARRANTIES OF ANY KIND. The\r\n              Predictor does not provide, own, or control the Predictor\r\n              platform, which is run by smart contracts deployed on the Tezos\r\n              blockchain. No developer or entity involved in creating the\r\n              Predictor will be liable for any claims or damages whatsoever\r\n              associated with your use, inability to use, or your interaction\r\n              with other users of, the Predictor protocol, including any direct,\r\n              indirect, incidental, special, exemplary, punitive or\r\n              consequential damages, or loss of profits, cryptocurrencies,\r\n              tokens, or anything else of value. <br></br>\r\n              <br></br>By using this websites and the derived platforms, you\r\n              accept and agree to the above terms.\r\n            </p>\r\n          </Flex>\r\n        </Flex>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Terms;\r\n","export default __webpack_public_path__ + \"static/media/How.8b897e52.png\";","import React, { useEffect, useState } from 'react';\r\nimport { Suspense } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport './How.css';\r\nimport { useWallet } from '../../helper/WalletContext';\r\nimport Background from '../../components/assets/How.png';\r\nimport PageLoading from '../../helper/PageLoading';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Text,\r\n  Flex,\r\n  Divider,\r\n  Center,\r\n  useColorModeValue,\r\n  Accordion,\r\n  AccordionItem,\r\n  AccordionButton,\r\n  AccordionPanel,\r\n  Heading,\r\n  Image,\r\n  Button,\r\n  Select,\r\n  bgImage,\r\n  Link,\r\n} from '@chakra-ui/react';\r\n\r\nconst How = () => {\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 3000);\r\n  }, []);\r\n\r\n  return (\r\n    <Container\r\n      display=\"flex\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n      height=\"auto\"\r\n      bgImage={Background}\r\n      bgPosition=\"center\"\r\n      bgSize=\"cover\"\r\n      w=\"100%\"\r\n      maxWidth=\"100%\"\r\n      py={{ base: '10', md: '120', lg: '120' }}\r\n      px={{ base: '10', md: '20', lg: '20' }}\r\n    >\r\n      {loading ? (\r\n        <PageLoading />\r\n      ) : (\r\n        <Flex\r\n          justifyContent={'start'}\r\n          height=\"100vh\"\r\n          flexDirection=\"column\"\r\n          w=\"100%\"\r\n          gap=\"5\"\r\n        >\r\n          <Heading\r\n            className=\"mainfont\"\r\n            as=\"h2\"\r\n            fontWeight=\"semibold\"\r\n            fontSize={{ base: '4xl', md: '4xl', lg: '7xl' }}\r\n          >\r\n            How It Works\r\n          </Heading>\r\n          <Flex\r\n            alignItems={'start'}\r\n            justifyContent=\"center\"\r\n            flexDirection=\"column\"\r\n          >\r\n            <Link\r\n              fontSize=\"2xl\"\r\n              href=\"https://medium.com/@karthi1908/predictor-c90398056061\"\r\n              _focus={{ outline: 'none' }}\r\n            >\r\n              Getting started with Predictor\r\n            </Link>\r\n            <br></br>\r\n\r\n            <Link\r\n              fontSize=\"2xl\"\r\n              href=\"https://medium.com/@karthi1908/predictor-d01e6c67de0e\"\r\n              _focus={{ outline: 'none' }}\r\n            >\r\n              How to buy / trade predictions on Predictor?\r\n            </Link>\r\n          </Flex>\r\n        </Flex>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default How;\r\n","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route,\r\n  useParams,\r\n} from 'react-router-dom';\r\nimport { ChakraProvider, ColorModeProvider } from '@chakra-ui/react';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer/Footer';\r\nimport Predict from './components/Predict';\r\nimport './App.css';\r\nimport Home from './components/Home';\r\nimport { ContractProvider, CONTRACT_ADDRESS } from './helper/tezos';\r\nimport PredictionContext from './helper/PredictionContext';\r\nimport Loading from './helper/Loading';\r\nimport MyPreds from './components/Mypreds';\r\nimport Redeem from './components/Redeem/redeem';\r\nimport Portfolio from './components/Portfolio/Portfolio';\r\nimport Whitelistme from './components/Whitelist/Whitelist';\r\nimport Privacy from './page/Privacy/Privacy';\r\nimport Contact from './page/Contact/Contact';\r\nimport FAQ from './page/FAQ/FAQ';\r\nimport Blogs from './page/Blogs/Blogs';\r\nimport BlogContent from './page/Blogs/BlogContent';\r\nimport Terms from './page/Terms/Terms';\r\nimport How from './page/How/How';\r\n\r\nfunction App() {\r\n  const [predictions, setPredictions] = React.useState(null);\r\n  const [predictionsArray, setPredictionsArray] = React.useState([]);\r\n  const updatePredictions = (preds, predArray) => {\r\n    setPredictions(preds);\r\n    setPredictionsArray(predArray);\r\n  };\r\n  const { id } = useParams();\r\n\r\n  React.useEffect(() => {\r\n    ContractProvider.at(CONTRACT_ADDRESS).then(async (contract) => {\r\n      const storage = await contract.storage();\r\n      const predictions = storage.predictions;\r\n      const counter = storage.Id;\r\n      const predList = [];\r\n      // for (let key of storage.predictTokenDetails.keys()) {\r\n      //   console.log(key);\r\n      //   console.log(storage.predictTokenDetails.get(key));\r\n      // }\r\n      for (let pred = 10; pred < counter; pred++) {\r\n        await predictions.get(pred).then((value) => {\r\n          predList.push({ id: pred, value });\r\n        });\r\n      }\r\n      updatePredictions(predictions, predList);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <ChakraProvider>\r\n      <ColorModeProvider\r\n        options={{\r\n          initialColorMode: 'dark',\r\n          useSystemColorMode: true,\r\n        }}\r\n      >\r\n        <>\r\n          <PredictionContext.Provider\r\n            value={{\r\n              predictions,\r\n              predictionsArray,\r\n              updatePredictions,\r\n            }}\r\n          >\r\n            <Router>\r\n              <Header />\r\n              <Routes>\r\n                <Route exact path=\"/\" element={<Home />} />\r\n\r\n                <Route path=\"/predict/:id\" element={<Predict />} />\r\n\r\n                <Route path=\"/mypreds\" element={<MyPreds />} />\r\n                <Route path=\"/Portfolio\" element={<Portfolio />} />\r\n                <Route path=\"/Privacy\" element={<Privacy />} />\r\n\r\n                <Route path=\"/Contact\" element={<Contact />} />\r\n                <Route path=\"/redeem\" element={<Redeem />} />\r\n                <Route path=\"/FAQ\" element={<FAQ />} />\r\n                <Route path=\"/Blogs\" element={<Blogs />} />\r\n                <Route path=\"/Terms\" element={<Terms />} />\r\n                <Route path=\"/Whitelist\" element={<Whitelistme />} />\r\n\r\n                <Route path=\"/BlogContent\" element={<BlogContent />} />\r\n\r\n                <Route path=\"/How\" element={<How />} />\r\n              </Routes>\r\n            </Router>\r\n          </PredictionContext.Provider>\r\n        </>\r\n      </ColorModeProvider>\r\n      <Footer />\r\n    </ChakraProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { ColorModeScript } from '@chakra-ui/react';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ColorModeScript initialColorMode=\"dark\" />\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}